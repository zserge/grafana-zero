{"version":3,"file":"PluginPage.07a78e2e5dfa22b54847.js","mappings":"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","sources":["webpack://grafana/./public/app/features/datasources/DashboardsTable.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDisabledBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/sharedStyles.ts","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginInstallBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginEnterpriseBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginUpdateAvailableBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Loader.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Page.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginLogo.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsSignature.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/ExternallyManagedButton.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/InstallControlsButton.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/InstallControls.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginSignatureDetailsBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeaderSignature.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeaderDependencies.tsx","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithDataSource.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginConfig.tsx","webpack://grafana/./public/app/features/plugins/utils.ts","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithApp.tsx","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithPlugin.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeader.tsx","webpack://grafana/./public/app/features/plugins/admin/components/VersionList.tsx","webpack://grafana/./public/app/features/plugins/admin/components/AppConfigWrapper.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDashboards.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsBody.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsDisabledError.tsx","webpack://grafana/./public/app/features/plugins/admin/pages/PluginDetails.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginDetailsTabs.tsx","webpack://grafana/./public/app/features/plugins/admin/state/selectors.ts","webpack://grafana/./public/app/features/plugins/admin/state/hooks.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-ca2705900f/0/cache/react-use-npm-17.2.4-c702db5427-3c885c3798.zip/node_modules/react-use/esm/usePrevious.js"],"sourcesContent":["import React, { FC } from 'react';\nimport { PluginDashboard } from '../../types';\nimport { Button, Icon } from '@grafana/ui';\n\nexport interface Props {\n  dashboards: PluginDashboard[];\n  onImport: (dashboard: PluginDashboard, overwrite: boolean) => void;\n  onRemove: (dashboard: PluginDashboard) => void;\n}\n\nconst DashboardsTable: FC<Props> = ({ dashboards, onImport, onRemove }) => {\n  function buttonText(dashboard: PluginDashboard) {\n    return dashboard.revision !== dashboard.importedRevision ? 'Update' : 'Re-import';\n  }\n\n  return (\n    <table className=\"filter-table\">\n      <tbody>\n        {dashboards.map((dashboard, index) => {\n          return (\n            <tr key={`${dashboard.dashboardId}-${index}`}>\n              <td className=\"width-1\">\n                <Icon name=\"apps\" />\n              </td>\n              <td>\n                {dashboard.imported ? (\n                  <a href={dashboard.importedUrl}>{dashboard.title}</a>\n                ) : (\n                  <span>{dashboard.title}</span>\n                )}\n              </td>\n              <td style={{ textAlign: 'right' }}>\n                {!dashboard.imported ? (\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => onImport(dashboard, false)}>\n                    Import\n                  </Button>\n                ) : (\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => onImport(dashboard, true)}>\n                    {buttonText(dashboard)}\n                  </Button>\n                )}\n                {dashboard.imported && (\n                  <Button icon=\"trash-alt\" variant=\"destructive\" size=\"sm\" onClick={() => onRemove(dashboard)} />\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DashboardsTable;\n","import React from 'react';\nimport { PluginErrorCode } from '@grafana/data';\nimport { Badge } from '@grafana/ui';\n\ntype Props = { error?: PluginErrorCode };\n\nexport function PluginDisabledBadge({ error }: Props): React.ReactElement {\n  const tooltip = errorCodeToTooltip(error);\n  return <Badge icon=\"exclamation-triangle\" text=\"Disabled\" color=\"red\" tooltip={tooltip} />;\n}\n\nfunction errorCodeToTooltip(error?: PluginErrorCode): string | undefined {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return 'Plugin disabled due to modified content';\n    case PluginErrorCode.invalidSignature:\n      return 'Plugin disabled due to invalid plugin signature';\n    case PluginErrorCode.missingSignature:\n      return 'Plugin disabled due to missing plugin signature';\n    default:\n      return `Plugin disabled due to unkown error: ${error}`;\n  }\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const getBadgeColor = (theme: GrafanaTheme2) => css`\n  background: ${theme.colors.background.primary};\n  border-color: ${theme.colors.border.strong};\n  color: ${theme.colors.text.secondary};\n`;\n","import React from 'react';\nimport { Badge, useStyles2 } from '@grafana/ui';\nimport { getBadgeColor } from './sharedStyles';\n\nexport function PluginInstalledBadge(): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  return <Badge text=\"Installed\" color=\"orange\" className={customBadgeStyles} />;\n}\n","import React from 'react';\nimport { Badge, Button, HorizontalGroup, PluginSignatureBadge, useStyles2 } from '@grafana/ui';\nimport { CatalogPlugin } from '../../types';\nimport { getBadgeColor } from './sharedStyles';\nimport { config } from '@grafana/runtime';\n\ntype Props = { plugin: CatalogPlugin };\n\nexport function PluginEnterpriseBadge({ plugin }: Props): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  const onClick = (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    ev.preventDefault();\n    window.open(\n      `https://grafana.com/grafana/plugins/${plugin.id}?utm_source=grafana_catalog_learn_more`,\n      '_blank',\n      'noopener,noreferrer'\n    );\n  };\n\n  if (config.licenseInfo?.hasValidLicense) {\n    return <Badge text=\"Enterprise\" color=\"blue\" />;\n  }\n\n  return (\n    <HorizontalGroup>\n      <PluginSignatureBadge status={plugin.signature} />\n      <Badge icon=\"lock\" aria-label=\"lock icon\" text=\"Enterprise\" color=\"blue\" className={customBadgeStyles} />\n      <Button size=\"sm\" fill=\"text\" icon=\"external-link-alt\" onClick={onClick}>\n        Learn more\n      </Button>\n    </HorizontalGroup>\n  );\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2, PluginType } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginUpdateAvailableBadge({ plugin }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n\n  // Currently renderer plugins are not supported by the catalog due to complications related to installation / update / uninstall.\n  if (plugin.hasUpdate && !plugin.isCore && plugin.type !== PluginType.renderer) {\n    return <p className={styles.hasUpdate}>Update available!</p>;\n  }\n\n  return null;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    hasUpdate: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      margin-bottom: 0;\n    `,\n  };\n};\n","import React from 'react';\nimport { LoadingPlaceholder } from '@grafana/ui';\nimport { Page } from './Page';\n\nexport interface Props {\n  text?: string;\n}\n\nexport const Loader = ({ text = 'Loading...' }: Props) => {\n  return (\n    <Page>\n      <div className=\"page-loader-wrapper\">\n        <LoadingPlaceholder text={text} />\n      </div>\n    </Page>\n  );\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const Page: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className=\"page-container\">\n      <div className={styles}>{children}</div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) =>\n  css`\n    margin-bottom: ${theme.spacing(3)};\n  `;\n","import React from 'react';\n\ntype PluginLogoProps = {\n  alt: string;\n  className?: string;\n  src: string;\n  height?: string | number;\n};\n\nexport function PluginLogo({ alt, className, src, height }: PluginLogoProps): React.ReactElement {\n  // @ts-ignore - react doesn't know about loading attr.\n  return <img src={src} className={className} alt={alt} loading=\"lazy\" height={height} />;\n}\n","import React from 'react';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { PluginErrorCode, PluginSignatureStatus } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\n// Designed to show signature information inside the active tab on the plugin's details page\nexport function PluginDetailsSignature({ className, plugin }: Props): React.ReactElement | null {\n  const isSignatureValid = plugin.signature === PluginSignatureStatus.valid;\n  const isCore = plugin.signature === PluginSignatureStatus.internal;\n  const isDisabled = plugin.isDisabled && isDisabledDueTooSignatureError(plugin.error);\n\n  // The basic information is already available in the header\n  if (isSignatureValid || isCore || isDisabled) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"warning\"\n      title=\"Invalid plugin signature\"\n      aria-label={selectors.pages.PluginPage.signatureInfo}\n      className={className}\n    >\n      <p>\n        Grafana Labs checks each plugin to verify that it has a valid digital signature. Plugin signature verification\n        is part of our security measures to ensure plugins are safe and trustworthy. Grafana Labs can’t guarantee the\n        integrity of this unsigned plugin. Ask the plugin author to request it to be signed.\n      </p>\n\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about plugins signing.\n      </a>\n    </Alert>\n  );\n}\n\nfunction isDisabledDueTooSignatureError(error: PluginErrorCode | undefined) {\n  // If the plugin is disabled due to signature error we rely on the disabled\n  // error message instad of the warning about the signature.\n\n  switch (error) {\n    case PluginErrorCode.invalidSignature:\n    case PluginErrorCode.missingSignature:\n    case PluginErrorCode.modifiedSignature:\n      return true;\n\n    default:\n      return false;\n  }\n}\n","import React from 'react';\nimport { HorizontalGroup, LinkButton } from '@grafana/ui';\nimport { getExternalManageLink } from '../../helpers';\nimport { PluginStatus } from '../../types';\n\ntype ExternallyManagedButtonProps = {\n  pluginId: string;\n  pluginStatus: PluginStatus;\n};\n\nexport function ExternallyManagedButton({ pluginId, pluginStatus }: ExternallyManagedButtonProps) {\n  const externalManageLink = `${getExternalManageLink(pluginId)}/?tab=installation`;\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    return (\n      <HorizontalGroup height=\"auto\">\n        <LinkButton href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          Update via grafana.com\n        </LinkButton>\n        <LinkButton variant=\"destructive\" href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          Uninstall via grafana.com\n        </LinkButton>\n      </HorizontalGroup>\n    );\n  }\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return (\n      <LinkButton variant=\"destructive\" href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n        Uninstall via grafana.com\n      </LinkButton>\n    );\n  }\n\n  return (\n    <LinkButton href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n      Install via grafana.com\n    </LinkButton>\n  );\n}\n","import React, { useState } from 'react';\nimport { AppEvents } from '@grafana/data';\nimport { Button, HorizontalGroup, ConfirmModal } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\n\nimport { CatalogPlugin, PluginStatus, Version } from '../../types';\nimport { useInstallStatus, useUninstallStatus, useInstall, useUninstall } from '../../state/hooks';\n\ntype InstallControlsButtonProps = {\n  plugin: CatalogPlugin;\n  pluginStatus: PluginStatus;\n  latestCompatibleVersion?: Version;\n};\n\nexport function InstallControlsButton({ plugin, pluginStatus, latestCompatibleVersion }: InstallControlsButtonProps) {\n  const { isInstalling, error: errorInstalling } = useInstallStatus();\n  const { isUninstalling, error: errorUninstalling } = useUninstallStatus();\n  const install = useInstall();\n  const uninstall = useUninstall();\n  const [isConfirmModalVisible, setIsConfirmModalVisible] = useState(false);\n  const showConfirmModal = () => setIsConfirmModalVisible(true);\n  const hideConfirmModal = () => setIsConfirmModalVisible(false);\n  const uninstallBtnText = isUninstalling ? 'Uninstalling' : 'Uninstall';\n\n  const onInstall = async () => {\n    await install(plugin.id, latestCompatibleVersion?.version);\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Installed ${plugin.name}`]);\n    }\n  };\n\n  const onUninstall = async () => {\n    hideConfirmModal();\n    await uninstall(plugin.id);\n    if (!errorUninstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Uninstalled ${plugin.name}`]);\n    }\n  };\n\n  const onUpdate = async () => {\n    await install(plugin.id, latestCompatibleVersion?.version, true);\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Updated ${plugin.name}`]);\n    }\n  };\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return (\n      <>\n        <ConfirmModal\n          isOpen={isConfirmModalVisible}\n          title={`Uninstall ${plugin.name}`}\n          body=\"Are you sure you want to uninstall this plugin?\"\n          confirmText=\"Confirm\"\n          icon=\"exclamation-triangle\"\n          onConfirm={onUninstall}\n          onDismiss={hideConfirmModal}\n        />\n        <HorizontalGroup height=\"auto\">\n          <Button variant=\"destructive\" disabled={isUninstalling} onClick={showConfirmModal}>\n            {uninstallBtnText}\n          </Button>\n        </HorizontalGroup>\n      </>\n    );\n  }\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    return (\n      <HorizontalGroup height=\"auto\">\n        <Button disabled={isInstalling} onClick={onUpdate}>\n          {isInstalling ? 'Updating' : 'Update'}\n        </Button>\n        <Button variant=\"destructive\" disabled={isUninstalling} onClick={onUninstall}>\n          {uninstallBtnText}\n        </Button>\n      </HorizontalGroup>\n    );\n  }\n\n  return (\n    <Button disabled={isInstalling} onClick={onInstall}>\n      {isInstalling ? 'Installing' : 'Install'}\n    </Button>\n  );\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\n\nimport { config } from '@grafana/runtime';\nimport { HorizontalGroup, Icon, LinkButton, useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2, PluginType } from '@grafana/data';\n\nimport { ExternallyManagedButton } from './ExternallyManagedButton';\nimport { InstallControlsButton } from './InstallControlsButton';\nimport { CatalogPlugin, PluginStatus, Version } from '../../types';\nimport { getExternalManageLink, isInstallControlsEnabled } from '../../helpers';\nimport { useIsRemotePluginsAvailable } from '../../state/hooks';\nimport { isGrafanaAdmin } from '../../permissions';\n\ninterface Props {\n  plugin: CatalogPlugin;\n  latestCompatibleVersion?: Version;\n}\n\nexport const InstallControls = ({ plugin, latestCompatibleVersion }: Props) => {\n  const styles = useStyles2(getStyles);\n  const isExternallyManaged = config.pluginAdminExternalManageEnabled;\n  const hasPermission = isGrafanaAdmin();\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const isCompatible = Boolean(latestCompatibleVersion);\n  const isInstallControlsDisabled = plugin.isCore || plugin.isDisabled || !isInstallControlsEnabled();\n\n  const pluginStatus = plugin.isInstalled\n    ? plugin.hasUpdate\n      ? PluginStatus.UPDATE\n      : PluginStatus.UNINSTALL\n    : PluginStatus.INSTALL;\n\n  if (isInstallControlsDisabled) {\n    return null;\n  }\n\n  if (plugin.type === PluginType.renderer) {\n    return <div className={styles.message}>Renderer plugins cannot be managed by the Plugin Catalog.</div>;\n  }\n\n  if (plugin.isEnterprise && !config.licenseInfo?.hasValidLicense) {\n    return (\n      <HorizontalGroup height=\"auto\" align=\"center\">\n        <span className={styles.message}>No valid Grafana Enterprise license detected.</span>\n        <LinkButton\n          href={`${getExternalManageLink(plugin.id)}?utm_source=grafana_catalog_learn_more`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          size=\"sm\"\n          fill=\"text\"\n          icon=\"external-link-alt\"\n        >\n          Learn more\n        </LinkButton>\n      </HorizontalGroup>\n    );\n  }\n\n  if (plugin.isDev) {\n    return (\n      <div className={styles.message}>This is a development build of the plugin and can&#39;t be uninstalled.</div>\n    );\n  }\n\n  if (!hasPermission && !isExternallyManaged) {\n    const message = `You do not have permission to ${pluginStatus} this plugin.`;\n    return <div className={styles.message}>{message}</div>;\n  }\n\n  if (!plugin.isPublished) {\n    return (\n      <div className={styles.message}>\n        <Icon name=\"exclamation-triangle\" /> This plugin is not published to{' '}\n        <a href=\"https://www.grafana.com/plugins\" target=\"__blank\" rel=\"noreferrer\">\n          grafana.com/plugins\n        </a>{' '}\n        and can&#39;t be managed via the catalog.\n      </div>\n    );\n  }\n\n  if (!isCompatible) {\n    return (\n      <div className={styles.message}>\n        <Icon name=\"exclamation-triangle\" />\n        &nbsp;This plugin doesn&#39;t support your version of Grafana.\n      </div>\n    );\n  }\n\n  if (isExternallyManaged) {\n    return <ExternallyManagedButton pluginId={plugin.id} pluginStatus={pluginStatus} />;\n  }\n\n  if (!isRemotePluginsAvailable) {\n    return (\n      <div className={styles.message}>\n        The install controls have been disabled because the Grafana server cannot access grafana.com.\n      </div>\n    );\n  }\n\n  return (\n    <InstallControlsButton\n      plugin={plugin}\n      pluginStatus={pluginStatus}\n      latestCompatibleVersion={latestCompatibleVersion}\n    />\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    message: css`\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport { GrafanaTheme2, PluginSignatureType } from '@grafana/data';\nimport { useStyles2, Icon, Badge, IconName } from '@grafana/ui';\n\nconst SIGNATURE_ICONS: Record<string, IconName> = {\n  [PluginSignatureType.grafana]: 'grafana',\n  [PluginSignatureType.commercial]: 'shield',\n  [PluginSignatureType.community]: 'shield',\n  DEFAULT: 'shield-exclamation',\n};\n\ntype Props = {\n  signatureType?: PluginSignatureType;\n  signatureOrg?: string;\n};\n\n// Shows more information about a valid signature\nexport function PluginSignatureDetailsBadge({ signatureType, signatureOrg = '' }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n\n  if (!signatureType && !signatureOrg) {\n    return null;\n  }\n\n  const signatureTypeText = signatureType === PluginSignatureType.grafana ? 'Grafana Labs' : capitalize(signatureType);\n  const signatureIcon = SIGNATURE_ICONS[signatureType || ''] || SIGNATURE_ICONS.DEFAULT;\n\n  return (\n    <>\n      <DetailsBadge>\n        <strong className={styles.strong}>Level:&nbsp;</strong>\n        <Icon size=\"xs\" name={signatureIcon} />\n        &nbsp;\n        {signatureTypeText}\n      </DetailsBadge>\n\n      <DetailsBadge>\n        <strong className={styles.strong}>Signed by:</strong> {signatureOrg}\n      </DetailsBadge>\n    </>\n  );\n}\n\nexport const DetailsBadge: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n\n  return <Badge color=\"green\" className={styles.badge} text={<>{children}</>} />;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  badge: css`\n    background-color: ${theme.colors.background.canvas};\n    border-color: ${theme.colors.border.strong};\n    color: ${theme.colors.text.secondary};\n    margin-left: ${theme.spacing()};\n  `,\n  strong: css`\n    color: ${theme.colors.text.primary};\n  `,\n  icon: css`\n    margin-right: ${theme.spacing(0.5)};\n  `,\n});\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2, PluginSignatureStatus } from '@grafana/data';\nimport { PluginSignatureBadge, useStyles2 } from '@grafana/ui';\nimport { PluginSignatureDetailsBadge } from './PluginSignatureDetailsBadge';\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\n// Designed to show plugin signature information in the header on the plugin's details page\nexport function PluginDetailsHeaderSignature({ plugin }: Props): React.ReactElement {\n  const styles = useStyles2(getStyles);\n  const isSignatureValid = plugin.signature === PluginSignatureStatus.valid;\n\n  return (\n    <div className={styles.container}>\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className={styles.link}\n      >\n        <PluginSignatureBadge status={plugin.signature} />\n      </a>\n\n      {isSignatureValid && (\n        <PluginSignatureDetailsBadge signatureType={plugin.signatureType} signatureOrg={plugin.signatureOrg} />\n      )}\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n    `,\n    link: css`\n      display: inline-flex;\n      align-items: center;\n    `,\n  };\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, Icon } from '@grafana/ui';\nimport { Version, CatalogPlugin, PluginIconName } from '../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  latestCompatibleVersion?: Version;\n  className?: string;\n};\n\nexport function PluginDetailsHeaderDependencies({\n  plugin,\n  latestCompatibleVersion,\n  className,\n}: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  const pluginDependencies = plugin.details?.pluginDependencies;\n  const grafanaDependency = plugin.isInstalled\n    ? plugin.details?.grafanaDependency\n    : latestCompatibleVersion?.grafanaDependency || plugin.details?.grafanaDependency;\n  const hasNoDependencyInfo = !grafanaDependency && (!pluginDependencies || !pluginDependencies.length);\n\n  if (hasNoDependencyInfo) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <div className={styles.dependencyTitle}>Dependencies:</div>\n\n      {/* Grafana dependency */}\n      {Boolean(grafanaDependency) && (\n        <div>\n          <Icon name=\"grafana\" className={styles.icon} />\n          Grafana {grafanaDependency}\n        </div>\n      )}\n\n      {/* Plugin dependencies */}\n      {pluginDependencies && pluginDependencies.length > 0 && (\n        <div>\n          {pluginDependencies.map((p) => {\n            return (\n              <span key={p.name}>\n                <Icon name={PluginIconName[p.type]} className={styles.icon} />\n                {p.name} {p.version}\n              </span>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    dependencyTitle: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      margin-right: ${theme.spacing(0.5)};\n\n      &::after {\n        content: '';\n        padding: 0;\n      }\n    `,\n    icon: css`\n      color: ${theme.colors.text.secondary};\n      margin-right: ${theme.spacing(0.5)};\n    `,\n  };\n};\n","import { DataSourcePluginMeta } from '@grafana/data';\nimport { Button } from '@grafana/ui';\nimport { addDataSource } from 'app/features/datasources/state/actions';\nimport React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { isDataSourceEditor } from '../../permissions';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithDataSource({ plugin }: Props): React.ReactElement | null {\n  const dispatch = useDispatch();\n  const onAddDataSource = useCallback(() => {\n    const meta = {\n      name: plugin.name,\n      id: plugin.id,\n    } as DataSourcePluginMeta;\n\n    dispatch(addDataSource(meta));\n  }, [dispatch, plugin]);\n\n  if (!isDataSourceEditor()) {\n    return null;\n  }\n\n  return (\n    <Button variant=\"primary\" onClick={onAddDataSource}>\n      Create a {plugin.name} data source\n    </Button>\n  );\n}\n","import { useAsync } from 'react-use';\nimport { CatalogPlugin } from '../types';\nimport { loadPlugin } from '../../utils';\n\nexport const usePluginConfig = (plugin?: CatalogPlugin) => {\n  return useAsync(async () => {\n    if (!plugin) {\n      return null;\n    }\n\n    if (plugin.isInstalled && !plugin.isDisabled) {\n      return loadPlugin(plugin.id);\n    }\n    return null;\n  }, [plugin?.id, plugin?.isInstalled, plugin?.isDisabled]);\n};\n","import { GrafanaPlugin, PanelPluginMeta, PluginType } from '@grafana/data';\nimport { getPluginSettings } from './pluginSettings';\nimport { importAppPlugin, importDataSourcePlugin } from './plugin_loader';\nimport { importPanelPluginFromMeta } from './importPanelPlugin';\n\nexport async function loadPlugin(pluginId: string): Promise<GrafanaPlugin> {\n  const info = await getPluginSettings(pluginId);\n  let result: GrafanaPlugin | undefined;\n\n  if (info.type === PluginType.app) {\n    result = await importAppPlugin(info);\n  }\n  if (info.type === PluginType.datasource) {\n    result = await importDataSourcePlugin(info);\n  }\n  if (info.type === PluginType.panel) {\n    const panelPlugin = await importPanelPluginFromMeta(info as PanelPluginMeta);\n    result = (panelPlugin as unknown) as GrafanaPlugin;\n  }\n  if (info.type === PluginType.renderer) {\n    result = { meta: info } as GrafanaPlugin;\n  }\n\n  if (!result) {\n    throw new Error('Unknown Plugin type: ' + info.type);\n  }\n\n  return result;\n}\n","import { PluginMeta } from '@grafana/data';\nimport { Button } from '@grafana/ui';\nimport { usePluginConfig } from '../../hooks/usePluginConfig';\nimport { updatePluginSettings } from '../../api';\nimport React from 'react';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithApp({ plugin }: Props): React.ReactElement | null {\n  const { value: pluginConfig } = usePluginConfig(plugin);\n\n  if (!pluginConfig) {\n    return null;\n  }\n\n  const { enabled, jsonData } = pluginConfig?.meta;\n\n  const enable = () =>\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: true,\n      pinned: true,\n      jsonData,\n    });\n\n  const disable = () => {\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: false,\n      pinned: false,\n      jsonData,\n    });\n  };\n\n  return (\n    <>\n      {!enabled && (\n        <Button variant=\"primary\" onClick={enable}>\n          Enable\n        </Button>\n      )}\n\n      {enabled && (\n        <Button variant=\"destructive\" onClick={disable}>\n          Disable\n        </Button>\n      )}\n    </>\n  );\n}\n\nconst updatePluginSettingsAndReload = async (id: string, data: Partial<PluginMeta>) => {\n  try {\n    await updatePluginSettings(id, data);\n\n    // Reloading the page as the plugin meta changes made here wouldn't be propagated throughout the app.\n    window.location.reload();\n  } catch (e) {\n    console.error('Error while updating the plugin', e);\n  }\n};\n","import React, { ReactElement } from 'react';\nimport { PluginType } from '@grafana/data';\nimport { CatalogPlugin } from '../../types';\nimport { GetStartedWithDataSource } from './GetStartedWithDataSource';\nimport { GetStartedWithApp } from './GetStartedWithApp';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithPlugin({ plugin }: Props): ReactElement | null {\n  if (!plugin.isInstalled || plugin.isDisabled) {\n    return null;\n  }\n\n  switch (plugin.type) {\n    case PluginType.datasource:\n      return <GetStartedWithDataSource plugin={plugin} />;\n    case PluginType.app:\n      return <GetStartedWithApp plugin={plugin} />;\n    default:\n      return null;\n  }\n}\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, Icon, HorizontalGroup } from '@grafana/ui';\n\nimport { InstallControls } from './InstallControls';\nimport { PluginDetailsHeaderSignature } from './PluginDetailsHeaderSignature';\nimport { PluginDetailsHeaderDependencies } from './PluginDetailsHeaderDependencies';\nimport { PluginLogo } from './PluginLogo';\nimport { CatalogPlugin } from '../types';\nimport { PluginDisabledBadge } from './Badges';\nimport { GetStartedWithPlugin } from './GetStartedWithPlugin';\nimport { getLatestCompatibleVersion } from '../helpers';\n\ntype Props = {\n  currentUrl: string;\n  parentUrl: string;\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsHeader({ plugin, currentUrl, parentUrl }: Props): React.ReactElement {\n  const styles = useStyles2(getStyles);\n  const latestCompatibleVersion = getLatestCompatibleVersion(plugin.details?.versions);\n  const version = plugin.installedVersion || latestCompatibleVersion?.version;\n\n  return (\n    <div className={styles.headerContainer}>\n      <PluginLogo\n        alt={`${plugin.name} logo`}\n        src={plugin.info.logos.small}\n        className={css`\n          object-fit: contain;\n          width: 100%;\n          height: 68px;\n          max-width: 68px;\n        `}\n      />\n\n      <div className={styles.headerWrapper}>\n        {/* Title & navigation */}\n        <nav className={styles.breadcrumb} aria-label=\"Breadcrumb\">\n          <ol>\n            <li>\n              <a className={styles.textUnderline} href={parentUrl}>\n                Plugins\n              </a>\n            </li>\n            <li>\n              <a href={currentUrl} aria-current=\"page\">\n                {plugin.name}\n              </a>\n            </li>\n          </ol>\n        </nav>\n\n        <div className={styles.headerInformationRow}>\n          {/* Org name */}\n          <span>{plugin.orgName}</span>\n\n          {/* Links */}\n          {plugin.details?.links.map((link: any) => (\n            <a key={link.name} href={link.url}>\n              {link.name}\n            </a>\n          ))}\n\n          {/* Downloads */}\n          {plugin.downloads > 0 && (\n            <span>\n              <Icon name=\"cloud-download\" />\n              {` ${new Intl.NumberFormat().format(plugin.downloads)}`}{' '}\n            </span>\n          )}\n\n          {/* Version */}\n          {Boolean(version) && <span>{version}</span>}\n\n          {/* Signature information */}\n          <PluginDetailsHeaderSignature plugin={plugin} />\n\n          {plugin.isDisabled && <PluginDisabledBadge error={plugin.error!} />}\n        </div>\n\n        <PluginDetailsHeaderDependencies\n          plugin={plugin}\n          latestCompatibleVersion={latestCompatibleVersion}\n          className={cx(styles.headerInformationRow, styles.headerInformationRowSecondary)}\n        />\n\n        <p>{plugin.description}</p>\n\n        <HorizontalGroup height=\"auto\">\n          <InstallControls plugin={plugin} latestCompatibleVersion={latestCompatibleVersion} />\n          <GetStartedWithPlugin plugin={plugin} />\n        </HorizontalGroup>\n      </div>\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    headerContainer: css`\n      display: flex;\n      margin-bottom: ${theme.spacing(3)};\n      margin-top: ${theme.spacing(3)};\n      min-height: 120px;\n    `,\n    headerWrapper: css`\n      margin-left: ${theme.spacing(3)};\n    `,\n    breadcrumb: css`\n      font-size: ${theme.typography.h2.fontSize};\n      li {\n        display: inline;\n        list-style: none;\n        &::after {\n          content: '/';\n          padding: 0 0.25ch;\n        }\n        &:last-child::after {\n          content: '';\n        }\n      }\n    `,\n    headerInformationRow: css`\n      display: flex;\n      align-items: center;\n      margin-top: ${theme.spacing()};\n      margin-bottom: ${theme.spacing()};\n      flex-flow: wrap;\n      & > * {\n        &::after {\n          content: '|';\n          padding: 0 ${theme.spacing()};\n        }\n        &:last-child::after {\n          content: '';\n          padding-right: 0;\n        }\n      }\n      font-size: ${theme.typography.h4.fontSize};\n    `,\n    headerInformationRowSecondary: css`\n      font-size: ${theme.typography.body.fontSize};\n    `,\n    headerOrgName: css`\n      font-size: ${theme.typography.h4.fontSize};\n    `,\n    signature: css`\n      margin: ${theme.spacing(3)};\n      margin-bottom: 0;\n    `,\n    textUnderline: css`\n      text-decoration: underline;\n    `,\n  };\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\n\nimport { dateTimeFormatTimeAgo, GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { Version } from '../types';\nimport { getLatestCompatibleVersion } from '../helpers';\n\ninterface Props {\n  versions?: Version[];\n  installedVersion?: string;\n}\n\nexport const VersionList = ({ versions = [], installedVersion }: Props) => {\n  const styles = useStyles2(getStyles);\n  const latestCompatibleVersion = getLatestCompatibleVersion(versions);\n\n  if (versions.length === 0) {\n    return <p>No version history was found.</p>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Version</th>\n          <th>Last updated</th>\n        </tr>\n      </thead>\n      <tbody>\n        {versions.map((version) => {\n          const isInstalledVersion = installedVersion === version.version;\n          return (\n            <tr key={version.version}>\n              {/* Version number */}\n              {isInstalledVersion ? (\n                <td className={styles.currentVersion}>{version.version} (installed version)</td>\n              ) : version.version === latestCompatibleVersion?.version ? (\n                <td>{version.version} (latest compatible version)</td>\n              ) : (\n                <td>{version.version}</td>\n              )}\n\n              {/* Last updated */}\n              <td className={isInstalledVersion ? styles.currentVersion : ''}>\n                {dateTimeFormatTimeAgo(version.createdAt)}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(2, 4, 3)};\n  `,\n  table: css`\n    table-layout: fixed;\n    width: 100%;\n    td,\n    th {\n      padding: ${theme.spacing()} 0;\n    }\n    th {\n      font-size: ${theme.typography.h5.fontSize};\n    }\n  `,\n  currentVersion: css`\n    font-weight: ${theme.typography.fontWeightBold};\n  `,\n});\n","// Libraries\nimport React, { PureComponent } from 'react';\nimport { cloneDeep, extend } from 'lodash';\n\nimport { Button } from '@grafana/ui';\nimport { PluginMeta, AppPlugin, deprecationWarning } from '@grafana/data';\nimport { AngularComponent, getAngularLoader, getBackendSrv } from '@grafana/runtime';\n\nimport { css } from '@emotion/css';\n\ninterface Props {\n  app: AppPlugin;\n}\n\ninterface State {\n  angularCtrl: AngularComponent | null;\n  refresh: number;\n}\n\nexport class AppConfigCtrlWrapper extends PureComponent<Props, State> {\n  element: HTMLElement | null = null;\n  //@ts-ignore\n  model: PluginMeta;\n\n  // Needed for angular scope\n  preUpdateHook = () => Promise.resolve();\n  postUpdateHook = () => Promise.resolve();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      angularCtrl: null,\n      refresh: 0,\n    };\n  }\n\n  componentDidMount() {\n    // Force a reload after the first mount -- is there a better way to do this?\n    setTimeout(() => {\n      this.setState({ refresh: this.state.refresh + 1 });\n    }, 5);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.element || this.state.angularCtrl) {\n      return;\n    }\n\n    // Set a copy of the meta\n    this.model = cloneDeep(this.props.app.meta);\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"app-config-ctrl\"></plugin-component>';\n    const scopeProps = {\n      ctrl: this,\n      // used by angular injectorMonkeyPatch to detect this scenario\n      isAppConfigCtrl: true,\n    };\n    const angularCtrl = loader.load(this.element, scopeProps, template);\n\n    this.setState({ angularCtrl });\n  }\n\n  render() {\n    const model = this.model;\n\n    const withRightMargin = css({ marginRight: '8px' });\n\n    return (\n      <div>\n        <div ref={(element) => (this.element = element)} />\n        <br />\n        <br />\n        {model && (\n          <div className=\"gf-form\">\n            {!model.enabled && (\n              <Button variant=\"primary\" onClick={this.enable} className={withRightMargin}>\n                Enable\n              </Button>\n            )}\n            {model.enabled && (\n              <Button variant=\"primary\" onClick={this.update} className={withRightMargin}>\n                Update\n              </Button>\n            )}\n            {model.enabled && (\n              <Button variant=\"destructive\" onClick={this.disable} className={withRightMargin}>\n                Disable\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  //-----------------------------------------------------------\n  // Copied from plugin_edit_ctrl\n  //-----------------------------------------------------------\n\n  update = () => {\n    const pluginId = this.model.id;\n\n    this.preUpdateHook()\n      .then(() => {\n        const updateCmd = extend(\n          {\n            enabled: this.model.enabled,\n            pinned: this.model.pinned,\n            jsonData: this.model.jsonData,\n            secureJsonData: this.model.secureJsonData,\n          },\n          {}\n        );\n        return getBackendSrv().post(`/api/plugins/${pluginId}/settings`, updateCmd);\n      })\n      .then(this.postUpdateHook)\n      .then((res) => {\n        window.location.href = window.location.href;\n      });\n  };\n\n  setPreUpdateHook = (callback: () => any) => {\n    this.preUpdateHook = callback;\n  };\n\n  setPostUpdateHook = (callback: () => any) => {\n    this.postUpdateHook = callback;\n  };\n\n  // Stub to avoid unknown function in legacy code\n  importDashboards = (): Promise<void> => {\n    deprecationWarning('AppConfig', 'importDashboards()');\n    return Promise.resolve();\n  };\n\n  enable = () => {\n    this.model.enabled = true;\n    this.model.pinned = true;\n    this.update();\n  };\n\n  disable = () => {\n    this.model.enabled = false;\n    this.model.pinned = false;\n    this.update();\n  };\n}\n","import React, { PureComponent } from 'react';\n\nimport { extend } from 'lodash';\n\nimport { PluginDashboard } from 'app/types';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { appEvents } from 'app/core/core';\nimport DashboardsTable from 'app/features/datasources/DashboardsTable';\nimport { AppEvents, PluginMeta, DataSourceApi } from '@grafana/data';\n\ninterface Props {\n  plugin: PluginMeta;\n  datasource?: DataSourceApi;\n}\n\ninterface State {\n  dashboards: PluginDashboard[];\n  loading: boolean;\n}\n\nexport class PluginDashboards extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: true,\n      dashboards: [],\n    };\n  }\n\n  async componentDidMount() {\n    const pluginId = this.props.plugin.id;\n    getBackendSrv()\n      .get(`/api/plugins/${pluginId}/dashboards`)\n      .then((dashboards: any) => {\n        this.setState({ dashboards, loading: false });\n      });\n  }\n\n  importAll = () => {\n    this.importNext(0);\n  };\n\n  private importNext = (index: number) => {\n    const { dashboards } = this.state;\n    return this.import(dashboards[index], true).then(() => {\n      if (index + 1 < dashboards.length) {\n        return new Promise<void>((resolve) => {\n          setTimeout(() => {\n            this.importNext(index + 1).then(() => {\n              resolve();\n            });\n          }, 500);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    });\n  };\n\n  import = (dash: PluginDashboard, overwrite: boolean) => {\n    const { plugin, datasource } = this.props;\n\n    const installCmd: any = {\n      pluginId: plugin.id,\n      path: dash.path,\n      overwrite: overwrite,\n      inputs: [],\n    };\n\n    if (datasource) {\n      installCmd.inputs.push({\n        name: '*',\n        type: 'datasource',\n        pluginId: datasource.meta.id,\n        value: datasource.name,\n      });\n    }\n\n    return getBackendSrv()\n      .post(`/api/dashboards/import`, installCmd)\n      .then((res: PluginDashboard) => {\n        appEvents.emit(AppEvents.alertSuccess, ['Dashboard Imported', dash.title]);\n        extend(dash, res);\n        this.setState({ dashboards: [...this.state.dashboards] });\n      });\n  };\n\n  remove = (dash: PluginDashboard) => {\n    getBackendSrv()\n      .delete('/api/dashboards/' + dash.importedUri)\n      .then(() => {\n        dash.imported = false;\n        this.setState({ dashboards: [...this.state.dashboards] });\n      });\n  };\n\n  render() {\n    const { loading, dashboards } = this.state;\n    if (loading) {\n      return <div>loading...</div>;\n    }\n    if (!dashboards || !dashboards.length) {\n      return <div>No dashboards are included with this plugin</div>;\n    }\n\n    return (\n      <div className=\"gf-form-group\">\n        <DashboardsTable dashboards={dashboards} onImport={this.import} onRemove={this.remove} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\n\nimport { AppPlugin, GrafanaTheme2, UrlQueryMap } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin, PluginTabIds } from '../types';\nimport { VersionList } from '../components/VersionList';\nimport { usePluginConfig } from '../hooks/usePluginConfig';\nimport { AppConfigCtrlWrapper } from './AppConfigWrapper';\nimport { PluginDashboards } from './PluginDashboards';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  queryParams: UrlQueryMap;\n  pageId: string;\n};\n\nexport function PluginDetailsBody({ plugin, queryParams, pageId }: Props): JSX.Element {\n  const styles = useStyles2(getStyles);\n  const { value: pluginConfig } = usePluginConfig(plugin);\n\n  if (pageId === PluginTabIds.OVERVIEW) {\n    return (\n      <div\n        className={cx(styles.readme, styles.container)}\n        dangerouslySetInnerHTML={{\n          __html: plugin.details?.readme ?? 'No plugin help or readme markdown file was found',\n        }}\n      />\n    );\n  }\n\n  if (pageId === PluginTabIds.VERSIONS) {\n    return (\n      <div className={styles.container}>\n        <VersionList versions={plugin.details?.versions} installedVersion={plugin.installedVersion} />\n      </div>\n    );\n  }\n\n  if (pageId === PluginTabIds.CONFIG && pluginConfig?.angularConfigCtrl) {\n    return (\n      <div className={styles.container}>\n        <AppConfigCtrlWrapper app={pluginConfig as AppPlugin} />\n      </div>\n    );\n  }\n\n  if (pluginConfig?.configPages) {\n    for (const configPage of pluginConfig.configPages) {\n      if (pageId === configPage.id) {\n        return (\n          <div className={styles.container}>\n            <configPage.body plugin={pluginConfig} query={queryParams} />\n          </div>\n        );\n      }\n    }\n  }\n\n  if (pageId === PluginTabIds.DASHBOARDS && pluginConfig) {\n    return (\n      <div className={styles.container}>\n        <PluginDashboards plugin={pluginConfig?.meta} />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <p>Page not found.</p>\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(3, 4)};\n  `,\n  readme: css`\n    & img {\n      max-width: 100%;\n    }\n\n    h1,\n    h2,\n    h3 {\n      margin-top: ${theme.spacing(3)};\n      margin-bottom: ${theme.spacing(2)};\n    }\n\n    *:first-child {\n      margin-top: 0;\n    }\n\n    li {\n      margin-left: ${theme.spacing(2)};\n      & > p {\n        margin: ${theme.spacing()} 0;\n      }\n    }\n  `,\n});\n","import React, { ReactElement } from 'react';\nimport { PluginErrorCode } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { CatalogPlugin } from '../types';\nimport { selectors } from '@grafana/e2e-selectors';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsDisabledError({ className, plugin }: Props): ReactElement | null {\n  if (!plugin.isDisabled) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"error\"\n      title=\"Plugin disabled\"\n      className={className}\n      aria-label={selectors.pages.PluginPage.disabledInfo}\n    >\n      {renderDescriptionFromError(plugin.error)}\n      <p>Please contact your server administrator to get this resolved.</p>\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/administration/cli/#plugins-commands\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about managing plugins\n      </a>\n    </Alert>\n  );\n}\n\nfunction renderDescriptionFromError(error?: PluginErrorCode): ReactElement {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that the content of this plugin does not match its signature. We can not guarantee the trustworthy\n          of this plugin and have therefore disabled it. We recommend you to reinstall the plugin to make sure you are\n          running a verified version of this plugin.\n        </p>\n      );\n    case PluginErrorCode.invalidSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that it was invalid. We can not guarantee the trustworthy of this plugin and have therefore\n          disabled it. We recommend you to reinstall the plugin to make sure you are running a verified version of this\n          plugin.\n        </p>\n      );\n    case PluginErrorCode.missingSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that there is no signature for this plugin. We can not guarantee the trustworthy of this plugin and\n          have therefore disabled it. We recommend you to reinstall the plugin to make sure you are running a verified\n          version of this plugin.\n        </p>\n      );\n    default:\n      return (\n        <p>\n          We failed to run this plugin due to an unkown reason and have therefor disabled it. We recommend you to\n          reinstall the plugin to make sure you are running a working version of this plugin.\n        </p>\n      );\n  }\n}\n","import React, { useEffect } from 'react';\nimport { css } from '@emotion/css';\nimport { usePrevious } from 'react-use';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, TabsBar, TabContent, Tab, Alert, IconName } from '@grafana/ui';\nimport { locationService } from '@grafana/runtime';\nimport { Layout } from '@grafana/ui/src/components/Layout/Layout';\nimport { Page } from 'app/core/components/Page/Page';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { PluginDetailsSignature } from '../components/PluginDetailsSignature';\nimport { PluginDetailsHeader } from '../components/PluginDetailsHeader';\nimport { PluginDetailsBody } from '../components/PluginDetailsBody';\nimport { Page as PluginPage } from '../components/Page';\nimport { Loader } from '../components/Loader';\nimport { PluginTabLabels, PluginTabIds, PluginDetailsTab } from '../types';\nimport { useGetSingle, useFetchStatus, useFetchDetailsStatus } from '../state/hooks';\nimport { usePluginDetailsTabs } from '../hooks/usePluginDetailsTabs';\nimport { AppNotificationSeverity } from 'app/types';\nimport { PluginDetailsDisabledError } from '../components/PluginDetailsDisabledError';\n\ntype Props = GrafanaRouteComponentProps<{ pluginId?: string }>;\n\nexport default function PluginDetails({ match, queryParams }: Props): JSX.Element | null {\n  const {\n    params: { pluginId = '' },\n    url,\n  } = match;\n  const parentUrl = url.substring(0, url.lastIndexOf('/'));\n  const defaultTabs: PluginDetailsTab[] = [\n    {\n      label: PluginTabLabels.OVERVIEW,\n      icon: 'file-alt',\n      id: PluginTabIds.OVERVIEW,\n      href: `${url}?page=${PluginTabIds.OVERVIEW}`,\n    },\n  ];\n  const plugin = useGetSingle(pluginId); // fetches the localplugin settings\n  const { tabs, defaultTab } = usePluginDetailsTabs(plugin, defaultTabs);\n  const { isLoading: isFetchLoading } = useFetchStatus();\n  const { isLoading: isFetchDetailsLoading } = useFetchDetailsStatus();\n  const styles = useStyles2(getStyles);\n  const prevTabs = usePrevious(tabs);\n  const pageId = (queryParams.page as PluginTabIds) || defaultTab;\n\n  // If an app plugin is uninstalled we need to reset the active tab when the config / dashboards tabs are removed.\n  useEffect(() => {\n    const hasUninstalledWithConfigPages = prevTabs && prevTabs.length > tabs.length;\n    const isViewingAConfigPage = pageId !== PluginTabIds.OVERVIEW && pageId !== PluginTabIds.VERSIONS;\n\n    if (hasUninstalledWithConfigPages && isViewingAConfigPage) {\n      locationService.replace(`${url}?page=${PluginTabIds.OVERVIEW}`);\n    }\n  }, [pageId, url, tabs, prevTabs]);\n\n  if (isFetchLoading || isFetchDetailsLoading) {\n    return (\n      <Page>\n        <Loader />\n      </Page>\n    );\n  }\n\n  if (!plugin) {\n    return (\n      <Layout justify=\"center\" align=\"center\">\n        <Alert severity={AppNotificationSeverity.Warning} title=\"Plugin not found\">\n          That plugin cannot be found. Please check the url is correct or <br />\n          go to the <a href={parentUrl}>plugin catalog</a>.\n        </Alert>\n      </Layout>\n    );\n  }\n\n  return (\n    <Page>\n      <PluginPage>\n        <PluginDetailsHeader currentUrl={`${url}?page=${pageId}`} parentUrl={parentUrl} plugin={plugin} />\n\n        {/* Tab navigation */}\n        <TabsBar>\n          {tabs.map((tab: PluginDetailsTab) => {\n            return (\n              <Tab\n                key={tab.label}\n                label={tab.label}\n                href={tab.href}\n                icon={tab.icon as IconName}\n                active={tab.id === pageId}\n              />\n            );\n          })}\n        </TabsBar>\n\n        {/* Active tab */}\n        <TabContent className={styles.tabContent}>\n          <PluginDetailsSignature plugin={plugin} className={styles.alert} />\n          <PluginDetailsDisabledError plugin={plugin} className={styles.alert} />\n          <PluginDetailsBody queryParams={queryParams} plugin={plugin} pageId={pageId} />\n        </TabContent>\n      </PluginPage>\n    </Page>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    alert: css`\n      margin: ${theme.spacing(3)};\n      margin-bottom: 0;\n    `,\n    // Needed due to block formatting context\n    tabContent: css`\n      overflow: auto;\n    `,\n  };\n};\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { PluginIncludeType, PluginType } from '@grafana/data';\nimport { CatalogPlugin, PluginDetailsTab, PluginTabIds, PluginTabLabels } from '../types';\nimport { usePluginConfig } from '../hooks/usePluginConfig';\nimport { isOrgAdmin } from '../permissions';\n\ntype ReturnType = {\n  error: Error | undefined;\n  loading: boolean;\n  tabs: PluginDetailsTab[];\n  defaultTab: string;\n};\n\nexport const usePluginDetailsTabs = (plugin?: CatalogPlugin, defaultTabs: PluginDetailsTab[] = []): ReturnType => {\n  const { loading, error, value: pluginConfig } = usePluginConfig(plugin);\n  const isPublished = Boolean(plugin?.isPublished);\n  const { pathname } = useLocation();\n\n  const [tabs, defaultTab] = useMemo(() => {\n    const canConfigurePlugins = isOrgAdmin();\n    const tabs: PluginDetailsTab[] = [...defaultTabs];\n    let defaultTab;\n\n    if (isPublished) {\n      tabs.push({\n        label: PluginTabLabels.VERSIONS,\n        icon: 'history',\n        id: PluginTabIds.VERSIONS,\n        href: `${pathname}?page=${PluginTabIds.VERSIONS}`,\n      });\n    }\n\n    // Not extending the tabs with the config pages if the plugin is not installed\n    if (!pluginConfig) {\n      defaultTab = PluginTabIds.OVERVIEW;\n      return [tabs, defaultTab];\n    }\n\n    if (canConfigurePlugins) {\n      if (pluginConfig.meta.type === PluginType.app) {\n        if (pluginConfig.angularConfigCtrl) {\n          tabs.push({\n            label: 'Config',\n            icon: 'cog',\n            id: PluginTabIds.CONFIG,\n            href: `${pathname}?page=${PluginTabIds.CONFIG}`,\n          });\n          defaultTab = PluginTabIds.CONFIG;\n        }\n\n        if (pluginConfig.configPages) {\n          for (const page of pluginConfig.configPages) {\n            tabs.push({\n              label: page.title,\n              icon: page.icon,\n              id: page.id,\n              href: `${pathname}?page=${page.id}`,\n            });\n            if (!defaultTab) {\n              defaultTab = page.id;\n            }\n          }\n        }\n\n        if (pluginConfig.meta.includes?.find((include) => include.type === PluginIncludeType.dashboard)) {\n          tabs.push({\n            label: 'Dashboards',\n            icon: 'apps',\n            id: PluginTabIds.DASHBOARDS,\n            href: `${pathname}?page=${PluginTabIds.DASHBOARDS}`,\n          });\n        }\n      }\n    }\n\n    if (!defaultTab) {\n      defaultTab = PluginTabIds.OVERVIEW;\n    }\n\n    return [tabs, defaultTab];\n  }, [pluginConfig, defaultTabs, pathname, isPublished]);\n\n  return {\n    error,\n    loading,\n    tabs,\n    defaultTab,\n  };\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { PluginError, PluginErrorCode } from '@grafana/data';\nimport { RequestStatus, PluginCatalogStoreState } from '../types';\nimport { pluginsAdapter } from './reducer';\n\nexport const selectRoot = (state: PluginCatalogStoreState) => state.plugins;\n\nexport const selectItems = createSelector(selectRoot, ({ items }) => items);\n\nexport const selectDisplayMode = createSelector(selectRoot, ({ settings }) => settings.displayMode);\n\nexport const { selectAll, selectById } = pluginsAdapter.getSelectors(selectItems);\n\nconst selectInstalled = (filterBy: string) =>\n  createSelector(selectAll, (plugins) =>\n    plugins.filter((plugin) => (filterBy === 'installed' ? plugin.isInstalled : !plugin.isCore))\n  );\n\nconst findByInstallAndType = (filterBy: string, filterByType: string) =>\n  createSelector(selectInstalled(filterBy), (plugins) =>\n    plugins.filter((plugin) => filterByType === 'all' || plugin.type === filterByType)\n  );\n\nconst findByKeyword = (searchBy: string) =>\n  createSelector(selectAll, (plugins) => {\n    if (searchBy === '') {\n      return [];\n    }\n\n    return plugins.filter((plugin) => {\n      const fields: String[] = [];\n      if (plugin.name) {\n        fields.push(plugin.name.toLowerCase());\n      }\n\n      if (plugin.orgName) {\n        fields.push(plugin.orgName.toLowerCase());\n      }\n\n      return fields.some((f) => f.includes(searchBy.toLowerCase()));\n    });\n  });\n\nexport const find = (searchBy: string, filterBy: string, filterByType: string) =>\n  createSelector(\n    findByInstallAndType(filterBy, filterByType),\n    findByKeyword(searchBy),\n    (filteredPlugins, searchedPlugins) => {\n      return searchBy === '' ? filteredPlugins : searchedPlugins;\n    }\n  );\n\nexport const selectPluginErrors = createSelector(selectAll, (plugins) =>\n  plugins\n    ? plugins\n        .filter((p) => Boolean(p.error))\n        .map(\n          (p): PluginError => ({\n            pluginId: p.id,\n            errorCode: p!.error as PluginErrorCode,\n          })\n        )\n    : []\n);\n\n// The following selectors are used to get information about the outstanding or completed plugins-related network requests.\nexport const selectRequest = (actionType: string) =>\n  createSelector(selectRoot, ({ requests = {} }) => requests[actionType]);\n\nexport const selectIsRequestPending = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request?.status === RequestStatus.Pending);\n\nexport const selectRequestError = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) =>\n    request?.status === RequestStatus.Rejected ? request?.error : null\n  );\n\nexport const selectIsRequestNotFetched = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request === undefined);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PluginError } from '@grafana/data';\nimport { setDisplayMode } from './reducer';\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall } from './actions';\nimport { CatalogPlugin, PluginCatalogStoreState, PluginListDisplayMode } from '../types';\nimport {\n  find,\n  selectAll,\n  selectById,\n  selectIsRequestPending,\n  selectRequestError,\n  selectIsRequestNotFetched,\n  selectDisplayMode,\n  selectPluginErrors,\n} from './selectors';\nimport { sortPlugins, Sorters } from '../helpers';\n\ntype Filters = {\n  query?: string;\n  filterBy?: string;\n  filterByType?: string;\n  sortBy?: Sorters;\n};\n\nexport const useGetAllWithFilters = ({\n  query = '',\n  filterBy = 'installed',\n  filterByType = 'all',\n  sortBy = Sorters.nameAsc,\n}: Filters) => {\n  useFetchAll();\n\n  const filtered = useSelector(find(query, filterBy, filterByType));\n  const { isLoading, error } = useFetchStatus();\n  const sortedAndFiltered = sortPlugins(filtered, sortBy);\n\n  return {\n    isLoading,\n    error,\n    plugins: sortedAndFiltered,\n  };\n};\n\nexport const useGetAll = (): CatalogPlugin[] => {\n  useFetchAll();\n\n  return useSelector(selectAll);\n};\n\nexport const useGetSingle = (id: string): CatalogPlugin | undefined => {\n  useFetchAll();\n  useFetchDetails(id);\n\n  return useSelector((state: PluginCatalogStoreState) => selectById(state, id));\n};\n\nexport const useGetErrors = (): PluginError[] => {\n  useFetchAll();\n\n  return useSelector(selectPluginErrors);\n};\n\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n  return (id: string, version?: string, isUpdating?: boolean) => dispatch(install({ id, version, isUpdating }));\n};\n\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(uninstall(id));\n};\n\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\n\nexport const useFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n\n  return { isInstalling, error };\n};\n\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n\n  return { isUninstalling, error };\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\n\nexport const useFetchDetails = (id: string) => {\n  const dispatch = useDispatch();\n  const plugin = useSelector((state: PluginCatalogStoreState) => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\n\nexport const useDisplayMode = () => {\n  const dispatch = useDispatch();\n  const displayMode = useSelector(selectDisplayMode);\n\n  return {\n    displayMode,\n    setDisplayMode: (v: PluginListDisplayMode) => dispatch(setDisplayMode(v)),\n  };\n};\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n"],"names":["dashboards","onImport","onRemove","buttonText","dashboard","revision","importedRevision","className","map","index","Icon","name","imported","href","importedUrl","title","style","textAlign","Button","variant","size","onClick","icon","dashboardId","PluginDisabledBadge","error","tooltip","PluginErrorCode","errorCodeToTooltip","Badge","text","color","getBadgeColor","theme","css","colors","background","primary","border","strong","secondary","PluginInstalledBadge","customBadgeStyles","useStyles2","PluginEnterpriseBadge","plugin","config","hasValidLicense","HorizontalGroup","PluginSignatureBadge","status","signature","fill","ev","preventDefault","window","open","id","PluginUpdateAvailableBadge","styles","getStyles","hasUpdate","isCore","type","PluginType","typography","bodySmall","fontSize","Loader","LoadingPlaceholder","Page","children","spacing","PluginLogo","alt","src","height","loading","PluginDetailsSignature","isSignatureValid","PluginSignatureStatus","isDisabled","isDisabledDueTooSignatureError","Alert","severity","selectors","target","rel","ExternallyManagedButton","pluginId","pluginStatus","externalManageLink","getExternalManageLink","PluginStatus","LinkButton","InstallControlsButton","latestCompatibleVersion","isInstalling","errorInstalling","useInstallStatus","isUninstalling","errorUninstalling","useUninstallStatus","install","useInstall","uninstall","useUninstall","isConfirmModalVisible","setIsConfirmModalVisible","useState","showConfirmModal","hideConfirmModal","uninstallBtnText","onUninstall","async","appEvents","AppEvents","onUpdate","version","ConfirmModal","isOpen","body","confirmText","onConfirm","onDismiss","disabled","InstallControls","isExternallyManaged","hasPermission","isGrafanaAdmin","isRemotePluginsAvailable","useIsRemotePluginsAvailable","isCompatible","Boolean","isInstallControlsDisabled","isInstallControlsEnabled","isInstalled","message","isEnterprise","align","isDev","isPublished","SIGNATURE_ICONS","PluginSignatureType","DEFAULT","PluginSignatureDetailsBadge","signatureType","signatureOrg","signatureTypeText","capitalize","signatureIcon","DetailsBadge","badge","canvas","PluginDetailsHeaderSignature","container","link","PluginDetailsHeaderDependencies","pluginDependencies","details","grafanaDependency","length","dependencyTitle","p","PluginIconName","fontWeightBold","GetStartedWithDataSource","dispatch","useDispatch","onAddDataSource","useCallback","meta","addDataSource","isDataSourceEditor","usePluginConfig","useAsync","info","getPluginSettings","result","importAppPlugin","importDataSourcePlugin","importPanelPluginFromMeta","Error","loadPlugin","GetStartedWithApp","value","pluginConfig","enabled","jsonData","updatePluginSettingsAndReload","pinned","data","updatePluginSettings","location","reload","e","console","GetStartedWithPlugin","PluginDetailsHeader","currentUrl","parentUrl","getLatestCompatibleVersion","versions","installedVersion","headerContainer","logos","small","headerWrapper","breadcrumb","textUnderline","headerInformationRow","orgName","links","url","downloads","Intl","NumberFormat","format","cx","headerInformationRowSecondary","description","h2","h4","headerOrgName","VersionList","table","isInstalledVersion","currentVersion","dateTimeFormatTimeAgo","createdAt","h5","AppConfigCtrlWrapper","PureComponent","constructor","props","super","Promise","resolve","this","model","preUpdateHook","then","updateCmd","extend","secureJsonData","getBackendSrv","post","postUpdateHook","res","callback","deprecationWarning","update","state","angularCtrl","refresh","componentDidMount","setTimeout","setState","componentDidUpdate","prevProps","element","cloneDeep","app","scopeProps","ctrl","isAppConfigCtrl","getAngularLoader","load","render","withRightMargin","marginRight","ref","enable","disable","PluginDashboards","importNext","import","dash","overwrite","datasource","installCmd","path","inputs","push","delete","importedUri","get","DashboardsTable","remove","PluginDetailsBody","queryParams","pageId","PluginTabIds","readme","dangerouslySetInnerHTML","__html","angularConfigCtrl","configPages","configPage","query","PluginDetailsDisabledError","renderDescriptionFromError","PluginDetails","match","params","substring","lastIndexOf","defaultTabs","label","PluginTabLabels","useGetSingle","tabs","defaultTab","pathname","useLocation","useMemo","canConfigurePlugins","isOrgAdmin","page","includes","find","include","PluginIncludeType","usePluginDetailsTabs","isLoading","isFetchLoading","useFetchStatus","isFetchDetailsLoading","useFetchDetailsStatus","prevTabs","usePrevious","useEffect","hasUninstalledWithConfigPages","isViewingAConfigPage","locationService","TabsBar","tab","Tab","active","TabContent","tabContent","alert","Layout","justify","AppNotificationSeverity","selectRoot","plugins","selectItems","createSelector","items","selectDisplayMode","settings","displayMode","selectAll","selectById","pluginsAdapter","findByInstallAndType","filterBy","filterByType","filter","selectInstalled","searchBy","fields","toLowerCase","some","f","findByKeyword","filteredPlugins","searchedPlugins","selectPluginErrors","errorCode","selectRequest","actionType","requests","selectIsRequestPending","request","RequestStatus","selectRequestError","useGetAllWithFilters","sortBy","Sorters","useFetchAll","filtered","useSelector","sortPlugins","useFetchDetails","useGetErrors","isUpdating","fetchRemotePlugins","fetchAll","fetchDetails","isNotFetched","undefined","shouldFetch","useDisplayMode","setDisplayMode","v","useRef","current"],"sourceRoot":""}