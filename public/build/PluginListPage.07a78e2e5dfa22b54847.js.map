{"version":3,"file":"PluginListPage.07a78e2e5dfa22b54847.js","mappings":"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","sources":["webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDisabledBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/sharedStyles.ts","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginInstallBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginEnterpriseBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginUpdateAvailableBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Page.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginLogo.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginListItemBadges.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginListItem.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginList.tsx","webpack://grafana/./public/app/features/plugins/admin/components/SearchField.tsx","webpack://grafana/./public/app/features/plugins/admin/components/HorizontalGroup.tsx","webpack://grafana/./public/app/features/plugins/admin/pages/Browse.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/useHistory.tsx","webpack://grafana/./public/app/features/plugins/admin/state/selectors.ts","webpack://grafana/./public/app/features/plugins/admin/state/hooks.ts"],"sourcesContent":["import React from 'react';\nimport { PluginErrorCode } from '@grafana/data';\nimport { Badge } from '@grafana/ui';\n\ntype Props = { error?: PluginErrorCode };\n\nexport function PluginDisabledBadge({ error }: Props): React.ReactElement {\n  const tooltip = errorCodeToTooltip(error);\n  return <Badge icon=\"exclamation-triangle\" text=\"Disabled\" color=\"red\" tooltip={tooltip} />;\n}\n\nfunction errorCodeToTooltip(error?: PluginErrorCode): string | undefined {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return 'Plugin disabled due to modified content';\n    case PluginErrorCode.invalidSignature:\n      return 'Plugin disabled due to invalid plugin signature';\n    case PluginErrorCode.missingSignature:\n      return 'Plugin disabled due to missing plugin signature';\n    default:\n      return `Plugin disabled due to unkown error: ${error}`;\n  }\n}\n","import { css } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const getBadgeColor = (theme: GrafanaTheme2) => css`\n  background: ${theme.colors.background.primary};\n  border-color: ${theme.colors.border.strong};\n  color: ${theme.colors.text.secondary};\n`;\n","import React from 'react';\nimport { Badge, useStyles2 } from '@grafana/ui';\nimport { getBadgeColor } from './sharedStyles';\n\nexport function PluginInstalledBadge(): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  return <Badge text=\"Installed\" color=\"orange\" className={customBadgeStyles} />;\n}\n","import React from 'react';\nimport { Badge, Button, HorizontalGroup, PluginSignatureBadge, useStyles2 } from '@grafana/ui';\nimport { CatalogPlugin } from '../../types';\nimport { getBadgeColor } from './sharedStyles';\nimport { config } from '@grafana/runtime';\n\ntype Props = { plugin: CatalogPlugin };\n\nexport function PluginEnterpriseBadge({ plugin }: Props): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  const onClick = (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    ev.preventDefault();\n    window.open(\n      `https://grafana.com/grafana/plugins/${plugin.id}?utm_source=grafana_catalog_learn_more`,\n      '_blank',\n      'noopener,noreferrer'\n    );\n  };\n\n  if (config.licenseInfo?.hasValidLicense) {\n    return <Badge text=\"Enterprise\" color=\"blue\" />;\n  }\n\n  return (\n    <HorizontalGroup>\n      <PluginSignatureBadge status={plugin.signature} />\n      <Badge icon=\"lock\" aria-label=\"lock icon\" text=\"Enterprise\" color=\"blue\" className={customBadgeStyles} />\n      <Button size=\"sm\" fill=\"text\" icon=\"external-link-alt\" onClick={onClick}>\n        Learn more\n      </Button>\n    </HorizontalGroup>\n  );\n}\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme2, PluginType } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginUpdateAvailableBadge({ plugin }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n\n  // Currently renderer plugins are not supported by the catalog due to complications related to installation / update / uninstall.\n  if (plugin.hasUpdate && !plugin.isCore && plugin.type !== PluginType.renderer) {\n    return <p className={styles.hasUpdate}>Update available!</p>;\n  }\n\n  return null;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    hasUpdate: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      margin-bottom: 0;\n    `,\n  };\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const Page: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className=\"page-container\">\n      <div className={styles}>{children}</div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) =>\n  css`\n    margin-bottom: ${theme.spacing(3)};\n  `;\n","import React from 'react';\n\ntype PluginLogoProps = {\n  alt: string;\n  className?: string;\n  src: string;\n  height?: string | number;\n};\n\nexport function PluginLogo({ alt, className, src, height }: PluginLogoProps): React.ReactElement {\n  // @ts-ignore - react doesn't know about loading attr.\n  return <img src={src} className={className} alt={alt} loading=\"lazy\" height={height} />;\n}\n","import React from 'react';\nimport { HorizontalGroup, PluginSignatureBadge } from '@grafana/ui';\nimport { CatalogPlugin } from '../types';\nimport { PluginEnterpriseBadge, PluginDisabledBadge, PluginInstalledBadge, PluginUpdateAvailableBadge } from './Badges';\n\ntype PluginBadgeType = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginListItemBadges({ plugin }: PluginBadgeType) {\n  if (plugin.isEnterprise) {\n    return (\n      <HorizontalGroup height=\"auto\" wrap>\n        <PluginEnterpriseBadge plugin={plugin} />\n        {plugin.isDisabled && <PluginDisabledBadge error={plugin.error} />}\n        <PluginUpdateAvailableBadge plugin={plugin} />\n      </HorizontalGroup>\n    );\n  }\n\n  return (\n    <HorizontalGroup height=\"auto\" wrap>\n      <PluginSignatureBadge status={plugin.signature} />\n      {plugin.isDisabled && <PluginDisabledBadge error={plugin.error} />}\n      {plugin.isInstalled && <PluginInstalledBadge />}\n      <PluginUpdateAvailableBadge plugin={plugin} />\n    </HorizontalGroup>\n  );\n}\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { CatalogPlugin, PluginIconName, PluginListDisplayMode } from '../types';\nimport { PluginListItemBadges } from './PluginListItemBadges';\nimport { PluginLogo } from './PluginLogo';\nimport { Icon, useStyles2 } from '@grafana/ui';\n\nexport const LOGO_SIZE = '48px';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  pathName: string;\n  displayMode?: PluginListDisplayMode;\n};\n\nexport function PluginListItem({ plugin, pathName, displayMode = PluginListDisplayMode.Grid }: Props) {\n  const styles = useStyles2(getStyles);\n  const isList = displayMode === PluginListDisplayMode.List;\n\n  return (\n    <a href={`${pathName}/${plugin.id}`} className={cx(styles.container, { [styles.list]: isList })}>\n      <PluginLogo src={plugin.info.logos.small} className={styles.pluginLogo} height={LOGO_SIZE} alt=\"\" />\n      <h2 className={cx(styles.name, 'plugin-name')}>{plugin.name}</h2>\n      <div className={cx(styles.content, 'plugin-content')}>\n        <p>By {plugin.orgName}</p>\n        <PluginListItemBadges plugin={plugin} />\n      </div>\n      <div className={styles.pluginType}>\n        {plugin.type && <Icon name={PluginIconName[plugin.type]} title={`${plugin.type} plugin`} />}\n      </div>\n    </a>\n  );\n}\n\n// Styles shared between the different type of list items\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: grid;\n      grid-template-columns: ${LOGO_SIZE} 1fr ${theme.spacing(3)};\n      grid-template-rows: auto;\n      gap: ${theme.spacing(2)};\n      grid-auto-flow: row;\n      background: ${theme.colors.background.secondary};\n      border-radius: ${theme.shape.borderRadius()};\n      padding: ${theme.spacing(3)};\n      transition: ${theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n        duration: theme.transitions.duration.short,\n      })};\n\n      &:hover {\n        background: ${theme.colors.emphasize(theme.colors.background.secondary, 0.03)};\n      }\n    `,\n    list: css`\n      row-gap: 0px;\n\n      > img {\n        align-self: start;\n      }\n\n      > .plugin-content {\n        min-height: 0px;\n        grid-area: 2 / 2 / 4 / 3;\n\n        > p {\n          margin: ${theme.spacing(0, 0, 0.5, 0)};\n        }\n      }\n\n      > .plugin-name {\n        align-self: center;\n        grid-area: 1 / 2 / 2 / 3;\n      }\n    `,\n    pluginType: css`\n      grid-area: 1 / 3 / 2 / 4;\n      color: ${theme.colors.text.secondary};\n    `,\n    pluginLogo: css`\n      grid-area: 1 / 1 / 3 / 2;\n      max-width: 100%;\n      align-self: center;\n      object-fit: contain;\n    `,\n    content: css`\n      grid-area: 3 / 1 / 4 / 3;\n      color: ${theme.colors.text.secondary};\n    `,\n    name: css`\n      grid-area: 1 / 2 / 3 / 3;\n      align-self: center;\n      font-size: ${theme.typography.h4.fontSize};\n      color: ${theme.colors.text.primary};\n      margin: 0;\n    `,\n  };\n};\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useLocation } from 'react-router-dom';\nimport { CatalogPlugin, PluginListDisplayMode } from '../types';\nimport { PluginListItem } from './PluginListItem';\n\ninterface Props {\n  plugins: CatalogPlugin[];\n  displayMode: PluginListDisplayMode;\n}\n\nexport const PluginList = ({ plugins, displayMode }: Props) => {\n  const isList = displayMode === PluginListDisplayMode.List;\n  const styles = useStyles2(getStyles);\n  const location = useLocation();\n\n  return (\n    <div className={cx(styles.container, { [styles.list]: isList })} data-testid=\"plugin-list\">\n      {plugins.map((plugin) => (\n        <PluginListItem key={plugin.id} plugin={plugin} pathName={location.pathname} displayMode={displayMode} />\n      ))}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(288px, 1fr));\n      gap: ${theme.spacing(3)};\n    `,\n    list: css`\n      grid-template-columns: 1fr;\n    `,\n  };\n};\n","import { FilterInput } from '@grafana/ui';\nimport React, { useState, useRef } from 'react';\nimport { useDebounce } from 'react-use';\n\ninterface Props {\n  value?: string;\n  onSearch: (value: string) => void;\n}\n\n// useDebounce has a bug which causes it to fire on first render. This wrapper prevents that.\n// https://github.com/streamich/react-use/issues/759\nconst useDebounceWithoutFirstRender = (callBack: () => any, delay = 0, deps: React.DependencyList = []) => {\n  const isFirstRender = useRef(true);\n  const debounceDeps = [...deps, isFirstRender];\n\n  return useDebounce(\n    () => {\n      if (isFirstRender.current) {\n        isFirstRender.current = false;\n        return;\n      }\n      return callBack();\n    },\n    delay,\n    debounceDeps\n  );\n};\n\nexport const SearchField = ({ value, onSearch }: Props) => {\n  const [query, setQuery] = useState(value);\n\n  useDebounceWithoutFirstRender(() => onSearch(query ?? ''), 500, [query]);\n\n  return (\n    <FilterInput\n      value={query}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter' || e.keyCode === 13) {\n          onSearch(e.currentTarget.value);\n        }\n      }}\n      placeholder=\"Search Grafana plugins\"\n      onChange={(value) => {\n        setQuery(value);\n      }}\n      width={46}\n    />\n  );\n};\n","import React from 'react';\nimport { css, cx } from '@emotion/css';\n\nimport { useTheme2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\ninterface HorizontalGroupProps {\n  children: React.ReactNode;\n  wrap?: boolean;\n  className?: string;\n}\n\nexport const HorizontalGroup = ({ children, wrap, className }: HorizontalGroupProps) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme, wrap);\n\n  return <div className={cx(styles.container, className)}>{children}</div>;\n};\n\nconst getStyles = (theme: GrafanaTheme2, wrap?: boolean) => ({\n  container: css`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: ${wrap ? 'wrap' : 'no-wrap'};\n    & > * {\n      margin-bottom: ${theme.spacing()};\n      margin-right: ${theme.spacing()};\n    }\n    & > *:last-child {\n      margin-right: 0;\n    }\n  `,\n});\n","import React, { ReactElement } from 'react';\nimport { css } from '@emotion/css';\nimport { SelectableValue, GrafanaTheme2 } from '@grafana/data';\nimport { LoadingPlaceholder, Select, RadioButtonGroup, useStyles2, Tooltip } from '@grafana/ui';\nimport { useLocation } from 'react-router-dom';\nimport { locationSearchToObject } from '@grafana/runtime';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { PluginList } from '../components/PluginList';\nimport { SearchField } from '../components/SearchField';\nimport { useHistory } from '../hooks/useHistory';\nimport { PluginAdminRoutes, PluginListDisplayMode } from '../types';\nimport { Page as PluginPage } from '../components/Page';\nimport { HorizontalGroup } from '../components/HorizontalGroup';\nimport { Page } from 'app/core/components/Page/Page';\nimport { useSelector } from 'react-redux';\nimport { StoreState } from 'app/types/store';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { useGetAllWithFilters, useIsRemotePluginsAvailable, useDisplayMode } from '../state/hooks';\nimport { Sorters } from '../helpers';\n\nexport default function Browse({ route }: GrafanaRouteComponentProps): ReactElement | null {\n  const location = useLocation();\n  const locationSearch = locationSearchToObject(location.search);\n  const navModelId = getNavModelId(route.routeName);\n  const navModel = useSelector((state: StoreState) => getNavModel(state.navIndex, navModelId));\n  const { displayMode, setDisplayMode } = useDisplayMode();\n  const styles = useStyles2(getStyles);\n  const history = useHistory();\n  const remotePluginsAvailable = useIsRemotePluginsAvailable();\n  const query = (locationSearch.q as string) || '';\n  const filterBy = (locationSearch.filterBy as string) || 'installed';\n  const filterByType = (locationSearch.filterByType as string) || 'all';\n  const sortBy = (locationSearch.sortBy as Sorters) || Sorters.nameAsc;\n  const { isLoading, error, plugins } = useGetAllWithFilters({\n    query,\n    filterBy,\n    filterByType,\n    sortBy,\n  });\n  const filterByOptions = [\n    { value: 'all', label: 'All' },\n    { value: 'installed', label: 'Installed' },\n  ];\n\n  const onSortByChange = (value: SelectableValue<string>) => {\n    history.push({ query: { sortBy: value.value } });\n  };\n\n  const onFilterByChange = (value: string) => {\n    history.push({ query: { filterBy: value } });\n  };\n\n  const onFilterByTypeChange = (value: string) => {\n    history.push({ query: { filterByType: value } });\n  };\n\n  const onSearch = (q: any) => {\n    history.push({ query: { filterBy: 'all', filterByType: 'all', q } });\n  };\n\n  // How should we handle errors?\n  if (error) {\n    console.error(error.message);\n    return null;\n  }\n\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <PluginPage>\n          <HorizontalGroup wrap>\n            <SearchField value={query} onSearch={onSearch} />\n            <HorizontalGroup wrap className={styles.actionBar}>\n              {/* Filter by type */}\n              <div>\n                <RadioButtonGroup\n                  value={filterByType}\n                  onChange={onFilterByTypeChange}\n                  options={[\n                    { value: 'all', label: 'All' },\n                    { value: 'datasource', label: 'Data sources' },\n                    { value: 'panel', label: 'Panels' },\n                    { value: 'app', label: 'Applications' },\n                  ]}\n                />\n              </div>\n\n              {/* Filter by installed / all */}\n              {remotePluginsAvailable ? (\n                <div>\n                  <RadioButtonGroup value={filterBy} onChange={onFilterByChange} options={filterByOptions} />\n                </div>\n              ) : (\n                <Tooltip\n                  content=\"This filter has been disabled because the Grafana server cannot access grafana.com\"\n                  placement=\"top\"\n                >\n                  <div>\n                    <RadioButtonGroup\n                      disabled={true}\n                      value={filterBy}\n                      onChange={onFilterByChange}\n                      options={filterByOptions}\n                    />\n                  </div>\n                </Tooltip>\n              )}\n\n              {/* Sorting */}\n              <div>\n                <Select\n                  menuShouldPortal\n                  aria-label=\"Sort Plugins List\"\n                  width={24}\n                  value={sortBy}\n                  onChange={onSortByChange}\n                  options={[\n                    { value: 'nameAsc', label: 'Sort by name (A-Z)' },\n                    { value: 'nameDesc', label: 'Sort by name (Z-A)' },\n                    { value: 'updated', label: 'Sort by updated date' },\n                    { value: 'published', label: 'Sort by published date' },\n                    { value: 'downloads', label: 'Sort by downloads' },\n                  ]}\n                />\n              </div>\n\n              {/* Display mode */}\n              <div>\n                <RadioButtonGroup<PluginListDisplayMode>\n                  className={styles.displayAs}\n                  value={displayMode}\n                  onChange={setDisplayMode}\n                  options={[\n                    {\n                      value: PluginListDisplayMode.Grid,\n                      icon: 'table',\n                      description: 'Display plugins in a grid layout',\n                    },\n                    { value: PluginListDisplayMode.List, icon: 'list-ul', description: 'Display plugins in list' },\n                  ]}\n                />\n              </div>\n            </HorizontalGroup>\n          </HorizontalGroup>\n          <div className={styles.listWrap}>\n            {isLoading ? (\n              <LoadingPlaceholder\n                className={css`\n                  margin-bottom: 0;\n                `}\n                text=\"Loading results\"\n              />\n            ) : (\n              <PluginList plugins={plugins} displayMode={displayMode} />\n            )}\n          </div>\n        </PluginPage>\n      </Page.Contents>\n    </Page>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  actionBar: css`\n    ${theme.breakpoints.up('xl')} {\n      margin-left: auto;\n    }\n  `,\n  listWrap: css`\n    margin-top: ${theme.spacing(2)};\n  `,\n  displayAs: css`\n    svg {\n      margin-right: 0;\n    }\n  `,\n});\n\n// Because the component is used under multiple paths (/plugins and /admin/plugins) we need to get\n// the correct navModel from the store\nconst getNavModelId = (routeName?: string) => {\n  if (routeName === PluginAdminRoutes.HomeAdmin || routeName === PluginAdminRoutes.BrowseAdmin) {\n    return 'admin-plugins';\n  }\n\n  return 'plugins';\n};\n","import { getLocationSrv } from '@grafana/runtime';\n\nexport const useHistory = () => {\n  return {\n    push: ({ query }: any) => {\n      getLocationSrv().update({\n        partial: true,\n        replace: false,\n        query,\n      });\n    },\n  };\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport { PluginError, PluginErrorCode } from '@grafana/data';\nimport { RequestStatus, PluginCatalogStoreState } from '../types';\nimport { pluginsAdapter } from './reducer';\n\nexport const selectRoot = (state: PluginCatalogStoreState) => state.plugins;\n\nexport const selectItems = createSelector(selectRoot, ({ items }) => items);\n\nexport const selectDisplayMode = createSelector(selectRoot, ({ settings }) => settings.displayMode);\n\nexport const { selectAll, selectById } = pluginsAdapter.getSelectors(selectItems);\n\nconst selectInstalled = (filterBy: string) =>\n  createSelector(selectAll, (plugins) =>\n    plugins.filter((plugin) => (filterBy === 'installed' ? plugin.isInstalled : !plugin.isCore))\n  );\n\nconst findByInstallAndType = (filterBy: string, filterByType: string) =>\n  createSelector(selectInstalled(filterBy), (plugins) =>\n    plugins.filter((plugin) => filterByType === 'all' || plugin.type === filterByType)\n  );\n\nconst findByKeyword = (searchBy: string) =>\n  createSelector(selectAll, (plugins) => {\n    if (searchBy === '') {\n      return [];\n    }\n\n    return plugins.filter((plugin) => {\n      const fields: String[] = [];\n      if (plugin.name) {\n        fields.push(plugin.name.toLowerCase());\n      }\n\n      if (plugin.orgName) {\n        fields.push(plugin.orgName.toLowerCase());\n      }\n\n      return fields.some((f) => f.includes(searchBy.toLowerCase()));\n    });\n  });\n\nexport const find = (searchBy: string, filterBy: string, filterByType: string) =>\n  createSelector(\n    findByInstallAndType(filterBy, filterByType),\n    findByKeyword(searchBy),\n    (filteredPlugins, searchedPlugins) => {\n      return searchBy === '' ? filteredPlugins : searchedPlugins;\n    }\n  );\n\nexport const selectPluginErrors = createSelector(selectAll, (plugins) =>\n  plugins\n    ? plugins\n        .filter((p) => Boolean(p.error))\n        .map(\n          (p): PluginError => ({\n            pluginId: p.id,\n            errorCode: p!.error as PluginErrorCode,\n          })\n        )\n    : []\n);\n\n// The following selectors are used to get information about the outstanding or completed plugins-related network requests.\nexport const selectRequest = (actionType: string) =>\n  createSelector(selectRoot, ({ requests = {} }) => requests[actionType]);\n\nexport const selectIsRequestPending = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request?.status === RequestStatus.Pending);\n\nexport const selectRequestError = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) =>\n    request?.status === RequestStatus.Rejected ? request?.error : null\n  );\n\nexport const selectIsRequestNotFetched = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request === undefined);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PluginError } from '@grafana/data';\nimport { setDisplayMode } from './reducer';\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall } from './actions';\nimport { CatalogPlugin, PluginCatalogStoreState, PluginListDisplayMode } from '../types';\nimport {\n  find,\n  selectAll,\n  selectById,\n  selectIsRequestPending,\n  selectRequestError,\n  selectIsRequestNotFetched,\n  selectDisplayMode,\n  selectPluginErrors,\n} from './selectors';\nimport { sortPlugins, Sorters } from '../helpers';\n\ntype Filters = {\n  query?: string;\n  filterBy?: string;\n  filterByType?: string;\n  sortBy?: Sorters;\n};\n\nexport const useGetAllWithFilters = ({\n  query = '',\n  filterBy = 'installed',\n  filterByType = 'all',\n  sortBy = Sorters.nameAsc,\n}: Filters) => {\n  useFetchAll();\n\n  const filtered = useSelector(find(query, filterBy, filterByType));\n  const { isLoading, error } = useFetchStatus();\n  const sortedAndFiltered = sortPlugins(filtered, sortBy);\n\n  return {\n    isLoading,\n    error,\n    plugins: sortedAndFiltered,\n  };\n};\n\nexport const useGetAll = (): CatalogPlugin[] => {\n  useFetchAll();\n\n  return useSelector(selectAll);\n};\n\nexport const useGetSingle = (id: string): CatalogPlugin | undefined => {\n  useFetchAll();\n  useFetchDetails(id);\n\n  return useSelector((state: PluginCatalogStoreState) => selectById(state, id));\n};\n\nexport const useGetErrors = (): PluginError[] => {\n  useFetchAll();\n\n  return useSelector(selectPluginErrors);\n};\n\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n  return (id: string, version?: string, isUpdating?: boolean) => dispatch(install({ id, version, isUpdating }));\n};\n\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(uninstall(id));\n};\n\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\n\nexport const useFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n\n  return { isInstalling, error };\n};\n\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n\n  return { isUninstalling, error };\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\n\nexport const useFetchDetails = (id: string) => {\n  const dispatch = useDispatch();\n  const plugin = useSelector((state: PluginCatalogStoreState) => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\n\nexport const useDisplayMode = () => {\n  const dispatch = useDispatch();\n  const displayMode = useSelector(selectDisplayMode);\n\n  return {\n    displayMode,\n    setDisplayMode: (v: PluginListDisplayMode) => dispatch(setDisplayMode(v)),\n  };\n};\n"],"names":["PluginDisabledBadge","error","tooltip","PluginErrorCode","errorCodeToTooltip","Badge","icon","text","color","getBadgeColor","theme","css","colors","background","primary","border","strong","secondary","PluginInstalledBadge","customBadgeStyles","useStyles2","className","PluginEnterpriseBadge","plugin","config","hasValidLicense","HorizontalGroup","PluginSignatureBadge","status","signature","Button","size","fill","onClick","ev","preventDefault","window","open","id","PluginUpdateAvailableBadge","styles","getStyles","hasUpdate","isCore","type","PluginType","typography","bodySmall","fontSize","Page","children","spacing","PluginLogo","alt","src","height","loading","PluginListItemBadges","isEnterprise","wrap","isDisabled","isInstalled","LOGO_SIZE","PluginListItem","pathName","displayMode","PluginListDisplayMode","isList","href","cx","container","list","info","logos","small","pluginLogo","name","content","orgName","pluginType","Icon","PluginIconName","title","shape","borderRadius","transitions","create","duration","short","emphasize","h4","PluginList","plugins","location","useLocation","map","pathname","SearchField","value","onSearch","query","setQuery","useState","callBack","delay","deps","isFirstRender","useRef","debounceDeps","useDebounce","current","useDebounceWithoutFirstRender","FilterInput","onKeyDown","e","key","keyCode","currentTarget","placeholder","onChange","width","useTheme2","Browse","route","locationSearch","locationSearchToObject","search","navModelId","getNavModelId","routeName","navModel","useSelector","state","getNavModel","navIndex","setDisplayMode","useDisplayMode","history","push","getLocationSrv","update","partial","replace","remotePluginsAvailable","useIsRemotePluginsAvailable","q","filterBy","filterByType","sortBy","Sorters","isLoading","useGetAllWithFilters","filterByOptions","label","onFilterByChange","console","message","actionBar","RadioButtonGroup","options","Tooltip","placement","disabled","Select","menuShouldPortal","displayAs","description","listWrap","LoadingPlaceholder","breakpoints","up","PluginAdminRoutes","selectRoot","selectItems","createSelector","items","selectDisplayMode","settings","selectAll","selectById","pluginsAdapter","findByInstallAndType","filter","selectInstalled","find","searchBy","fields","toLowerCase","some","f","includes","findByKeyword","filteredPlugins","searchedPlugins","selectPluginErrors","p","Boolean","pluginId","errorCode","selectRequest","actionType","requests","selectIsRequestPending","request","RequestStatus","selectRequestError","useFetchAll","filtered","useFetchStatus","sortPlugins","useGetSingle","useFetchDetails","useGetErrors","useInstall","dispatch","useDispatch","version","isUpdating","install","useUninstall","uninstall","fetchRemotePlugins","fetchAll","useFetchDetailsStatus","fetchDetails","useInstallStatus","isInstalling","useUninstallStatus","isUninstalling","isNotFetched","undefined","useEffect","shouldFetch","details","v"],"sourceRoot":""}