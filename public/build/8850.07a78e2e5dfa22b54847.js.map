{"version":3,"file":"8850.07a78e2e5dfa22b54847.js","mappings":"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","sources":["webpack://grafana/./public/app/features/admin/ServerStats.tsx","webpack://grafana/./public/app/features/admin/state/apis.tsx","webpack://grafana/./public/app/features/admin/LicenseChrome.tsx","webpack://grafana/./public/app/features/admin/UpgradePage.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Loader.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Page.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { css } from '@emotion/css';\nimport { CardContainer, LinkButton, useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { AccessControlAction } from 'app/types';\nimport { getServerStats, ServerStat } from './state/apis';\nimport { contextSrv } from '../../core/services/context_srv';\nimport { Loader } from '../plugins/admin/components/Loader';\n\nexport const ServerStats = () => {\n  const [stats, setStats] = useState<ServerStat | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (contextSrv.hasAccess(AccessControlAction.ActionServerStatsRead, contextSrv.isGrafanaAdmin)) {\n      setIsLoading(true);\n      getServerStats().then((stats) => {\n        setStats(stats);\n        setIsLoading(false);\n      });\n    }\n  }, []);\n\n  if (!contextSrv.hasAccess(AccessControlAction.ActionServerStatsRead, contextSrv.isGrafanaAdmin)) {\n    return null;\n  }\n\n  return (\n    <>\n      <h2 className={styles.title}>Instance statistics</h2>\n      {isLoading ? (\n        <div className={styles.loader}>\n          <Loader text={'Loading instance stats...'} />\n        </div>\n      ) : stats ? (\n        <div className={styles.row}>\n          <StatCard\n            content={[\n              { name: 'Dashboards (starred)', value: `${stats.dashboards} (${stats.stars})` },\n              { name: 'Tags', value: stats.tags },\n              { name: 'Playlists', value: stats.playlists },\n              { name: 'Snapshots', value: stats.snapshots },\n            ]}\n            footer={\n              <LinkButton href={'/dashboards'} variant={'secondary'}>\n                Manage dashboards\n              </LinkButton>\n            }\n          />\n\n          <div className={styles.doubleRow}>\n            <StatCard\n              content={[{ name: 'Data sources', value: stats.datasources }]}\n              footer={\n                <LinkButton href={'/datasources'} variant={'secondary'}>\n                  Manage data sources\n                </LinkButton>\n              }\n            />\n            <StatCard\n              content={[{ name: 'Alerts', value: stats.alerts }]}\n              footer={\n                <LinkButton href={'/alerting/list'} variant={'secondary'}>\n                  Alerts\n                </LinkButton>\n              }\n            />\n          </div>\n          <StatCard\n            content={[\n              { name: 'Organisations', value: stats.orgs },\n              { name: 'Users total', value: stats.users },\n              { name: 'Active users in last 30 days', value: stats.activeUsers },\n              { name: 'Active sessions', value: stats.activeSessions },\n            ]}\n            footer={\n              <LinkButton href={'/admin/users'} variant={'secondary'}>\n                Manage users\n              </LinkButton>\n            }\n          />\n        </div>\n      ) : (\n        <p className={styles.notFound}>No stats found.</p>\n      )}\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    title: css`\n      margin-bottom: ${theme.spacing(4)};\n    `,\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n\n      & > div:not(:last-of-type) {\n        margin-right: ${theme.spacing(2)};\n      }\n\n      & > div {\n        width: 33.3%;\n      }\n    `,\n    doubleRow: css`\n      display: flex;\n      flex-direction: column;\n\n      & > div:first-of-type {\n        margin-bottom: ${theme.spacing(2)};\n      }\n    `,\n\n    loader: css`\n      height: 290px;\n    `,\n\n    notFound: css`\n      font-size: ${theme.typography.h6.fontSize};\n      text-align: center;\n      height: 290px;\n    `,\n  };\n};\n\ntype StatCardProps = {\n  content: Array<Record<string, number | string>>;\n  footer?: JSX.Element;\n};\n\nconst StatCard = ({ content, footer }: StatCardProps) => {\n  const styles = useStyles2(getCardStyles);\n  return (\n    <CardContainer className={styles.container} disableHover>\n      <div className={styles.inner}>\n        <div className={styles.content}>\n          {content.map((item) => {\n            return (\n              <div key={item.name} className={styles.row}>\n                <span>{item.name}</span>\n                <span>{item.value}</span>\n              </div>\n            );\n          })}\n        </div>\n        {footer && <div>{footer}</div>}\n      </div>\n    </CardContainer>\n  );\n};\n\nconst getCardStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      padding: ${theme.spacing(2)};\n    `,\n    inner: css`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n    `,\n    content: css`\n      flex: 1 0 auto;\n    `,\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      margin-bottom: ${theme.spacing(2)};\n      align-items: center;\n    `,\n  };\n};\n","import { getBackendSrv } from '@grafana/runtime';\n\nexport interface ServerStat {\n  activeAdmins: number;\n  activeEditors: number;\n  activeSessions: number;\n  activeUsers: number;\n  activeViewers: number;\n  admins: number;\n  alerts: number;\n  dashboards: number;\n  datasources: number;\n  editors: number;\n  orgs: number;\n  playlists: number;\n  snapshots: number;\n  stars: number;\n  tags: number;\n  users: number;\n  viewers: number;\n}\n\nexport const getServerStats = async (): Promise<ServerStat | null> => {\n  return getBackendSrv()\n    .get('api/admin/stats')\n    .catch((err) => {\n      console.error(err);\n      return null;\n    });\n};\n","import React from 'react';\nimport { stylesFactory, useTheme } from '@grafana/ui';\nimport { css } from '@emotion/css';\nimport { GrafanaTheme } from '@grafana/data';\n\nconst title = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  const backgroundUrl = theme.isDark ? 'public/img/licensing/header_dark.svg' : 'public/img/licensing/header_light.svg';\n  const footerBg = theme.isDark ? theme.palette.dark9 : theme.palette.gray6;\n\n  return {\n    container: css`\n      padding: 36px 79px;\n      background: ${theme.colors.panelBg};\n    `,\n    footer: css`\n      text-align: center;\n      padding: 16px;\n      background: ${footerBg};\n    `,\n    header: css`\n      height: 137px;\n      padding: 40px 0 0 79px;\n      position: relative;\n      background: url('${backgroundUrl}') right;\n    `,\n  };\n});\n\ninterface Props {\n  header: string;\n  subheader?: string;\n  editionNotice?: string;\n}\n\nexport const LicenseChrome: React.FC<Props> = ({ header, editionNotice, subheader, children }) => {\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  return (\n    <>\n      <div className={styles.header}>\n        <h2 style={title}>{header}</h2>\n        {subheader && <h3>{subheader}</h3>}\n\n        <Circle\n          size=\"128px\"\n          style={{\n            boxShadow: '0px 0px 24px rgba(24, 58, 110, 0.45)',\n            background: '#0A1C36',\n            position: 'absolute',\n            top: '19px',\n            left: '71%',\n          }}\n        >\n          <img\n            src=\"public/img/grafana_icon.svg\"\n            alt=\"Grafana\"\n            width=\"80px\"\n            style={{ position: 'absolute', left: '23px', top: '20px' }}\n          />\n        </Circle>\n      </div>\n\n      <div className={styles.container}>{children}</div>\n\n      {editionNotice && <div className={styles.footer}>{editionNotice}</div>}\n    </>\n  );\n};\n\ninterface CircleProps {\n  size: string;\n  style?: React.CSSProperties;\n}\n\nexport const Circle: React.FC<CircleProps> = ({ size, style, children }) => {\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        borderRadius: '50%',\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { css } from '@emotion/css';\nimport { LinkButton, useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2, NavModel } from '@grafana/data';\nimport Page from '../../core/components/Page/Page';\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { LicenseChrome } from './LicenseChrome';\nimport { StoreState } from '../../types';\nimport { ServerStats } from './ServerStats';\n\ninterface Props {\n  navModel: NavModel;\n}\n\nexport const UpgradePage: React.FC<Props> = ({ navModel }) => {\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <ServerStats />\n        <UpgradeInfo\n          editionNotice=\"You are running the open-source version of Grafana.\n        You have to install the Enterprise edition in order enable Enterprise features.\"\n        />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nconst titleStyles = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\n\ninterface UpgradeInfoProps {\n  editionNotice?: string;\n}\n\nexport const UpgradeInfo: React.FC<UpgradeInfoProps> = ({ editionNotice }) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <h2 className={styles.title}>Enterprise license</h2>\n      <LicenseChrome header=\"Grafana Enterprise\" subheader=\"Get your free trial\" editionNotice={editionNotice}>\n        <div className={styles.column}>\n          <FeatureInfo />\n          <ServiceInfo />\n        </div>\n      </LicenseChrome>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    column: css`\n      display: grid;\n      grid-template-columns: 100%;\n      column-gap: 20px;\n      row-gap: 40px;\n\n      @media (min-width: 1050px) {\n        grid-template-columns: 50% 50%;\n      }\n    `,\n    title: css`\n      margin: ${theme.spacing(4)} 0;\n    `,\n  };\n};\n\nconst GetEnterprise: React.FC = () => {\n  return (\n    <div style={{ marginTop: '40px', marginBottom: '30px' }}>\n      <h2 style={titleStyles}>Get Grafana Enterprise</h2>\n      <CallToAction />\n      <p style={{ paddingTop: '12px' }}>\n        You can use the trial version for free for 30 days. We will remind you about it five days before the trial\n        period ends.\n      </p>\n    </div>\n  );\n};\n\nconst CallToAction: React.FC = () => {\n  return (\n    <LinkButton\n      variant=\"primary\"\n      size=\"lg\"\n      href=\"https://grafana.com/contact?about=grafana-enterprise&utm_source=grafana-upgrade-page\"\n    >\n      Contact us and get a free trial\n    </LinkButton>\n  );\n};\n\nconst ServiceInfo: React.FC = () => {\n  return (\n    <div>\n      <h4>At your service</h4>\n\n      <List>\n        <Item title=\"Enterprise Plugins\" image=\"public/img/licensing/plugin_enterprise.svg\" />\n        <Item title=\"Critical SLA: 2 hours\" image=\"public/img/licensing/sla.svg\" />\n        <Item title=\"Unlimited Expert Support\" image=\"public/img/licensing/customer_support.svg\">\n          24 x 7 x 365 support via\n          <List nested={true}>\n            <Item title=\"Email\" />\n            <Item title=\"Private Slack channel\" />\n            <Item title=\"Phone\" />\n          </List>\n        </Item>\n        <Item title=\"Hand-in-hand support\" image=\"public/img/licensing/handinhand_support.svg\">\n          in the upgrade process\n        </Item>\n      </List>\n\n      <div style={{ marginTop: '20px' }}>\n        <strong>Also included:</strong>\n        <br />\n        Indemnification, working with Grafana Labs on future prioritization, and training from the core Grafana team.\n      </div>\n\n      <GetEnterprise />\n    </div>\n  );\n};\n\nconst FeatureInfo: React.FC = () => {\n  return (\n    <div style={{ paddingRight: '11px' }}>\n      <h4>Enhanced functionality</h4>\n      <FeatureListing />\n    </div>\n  );\n};\n\nconst FeatureListing: React.FC = () => {\n  return (\n    <List>\n      <Item title=\"Data source permissions\" />\n      <Item title=\"Reporting\" />\n      <Item title=\"SAML authentication\" />\n      <Item title=\"Enhanced LDAP integration\" />\n      <Item title=\"Team Sync\">LDAP, GitHub OAuth, Auth Proxy, Okta</Item>\n      <Item title=\"White labeling\" />\n      <Item title=\"Auditing\" />\n      <Item title=\"Settings updates at runtime\" />\n      <Item title=\"Grafana usage insights\">\n        <List nested={true}>\n          <Item title=\"Sort dashboards by popularity in search\" />\n          <Item title=\"Find unused dashboards\" />\n          <Item title=\"Dashboard usage stats drawer\" />\n          <Item title=\"Dashboard presence indicators\" />\n        </List>\n      </Item>\n      <Item title=\"Enterprise plugins\">\n        <List nested={true}>\n          <Item title=\"Oracle\" />\n          <Item title=\"Splunk\" />\n          <Item title=\"Service Now\" />\n          <Item title=\"Dynatrace\" />\n          <Item title=\"New Relic\" />\n          <Item title=\"DataDog\" />\n          <Item title=\"AppDynamics\" />\n          <Item title=\"SAP HANA®\" />\n          <Item title=\"Gitlab\" />\n          <Item title=\"Honeycomb\" />\n          <Item title=\"Jira\" />\n          <Item title=\"MongoDB\" />\n          <Item title=\"Salesforce\" />\n          <Item title=\"Snowflake\" />\n          <Item title=\"Wavefront\" />\n        </List>\n      </Item>\n    </List>\n  );\n};\n\ninterface ListProps {\n  nested?: boolean;\n}\n\nconst List: React.FC<ListProps> = ({ children, nested }) => {\n  const listStyle = css`\n    display: flex;\n    flex-direction: column;\n    padding-top: 8px;\n\n    > div {\n      margin-bottom: ${nested ? 0 : 8}px;\n    }\n  `;\n\n  return <div className={listStyle}>{children}</div>;\n};\n\ninterface ItemProps {\n  title: string;\n  image?: string;\n}\n\nconst Item: React.FC<ItemProps> = ({ children, title, image }) => {\n  const imageUrl = image ? image : 'public/img/licensing/checkmark.svg';\n  const itemStyle = css`\n    display: flex;\n\n    > img {\n      display: block;\n      height: 22px;\n      flex-grow: 0;\n      padding-right: 12px;\n    }\n  `;\n  const titleStyle = css`\n    font-weight: 500;\n    line-height: 1.7;\n  `;\n\n  return (\n    <div className={itemStyle}>\n      <img src={imageUrl} alt=\"\" />\n      <div>\n        <div className={titleStyle}>{title}</div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'upgrading'),\n});\n\nexport default connect(mapStateToProps)(UpgradePage);\n","import React from 'react';\nimport { LoadingPlaceholder } from '@grafana/ui';\nimport { Page } from './Page';\n\nexport interface Props {\n  text?: string;\n}\n\nexport const Loader = ({ text = 'Loading...' }: Props) => {\n  return (\n    <Page>\n      <div className=\"page-loader-wrapper\">\n        <LoadingPlaceholder text={text} />\n      </div>\n    </Page>\n  );\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const Page: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className=\"page-container\">\n      <div className={styles}>{children}</div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) =>\n  css`\n    margin-bottom: ${theme.spacing(3)};\n  `;\n"],"names":["ServerStats","stats","setStats","useState","isLoading","setIsLoading","styles","useStyles2","getStyles","useEffect","contextSrv","AccessControlAction","async","getBackendSrv","get","catch","err","console","error","getServerStats","then","className","title","loader","Loader","text","row","StatCard","content","name","value","dashboards","stars","tags","playlists","snapshots","footer","LinkButton","href","variant","doubleRow","datasources","alerts","orgs","users","activeUsers","activeSessions","notFound","theme","css","spacing","typography","h6","fontSize","getCardStyles","CardContainer","container","disableHover","inner","map","item","fontWeight","lineHeight","stylesFactory","backgroundUrl","isDark","footerBg","palette","dark9","gray6","colors","panelBg","header","LicenseChrome","editionNotice","subheader","children","useTheme","style","Circle","size","boxShadow","background","position","top","left","src","alt","width","height","bottom","right","borderRadius","UpgradePage","navModel","Page","UpgradeInfo","titleStyles","column","FeatureInfo","ServiceInfo","GetEnterprise","marginTop","marginBottom","CallToAction","paddingTop","List","Item","image","nested","paddingRight","FeatureListing","listStyle","imageUrl","itemStyle","titleStyle","connect","state","getNavModel","navIndex","LoadingPlaceholder"],"sourceRoot":""}