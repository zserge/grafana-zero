{"version":3,"file":"ServerStats.07a78e2e5dfa22b54847.js","mappings":"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","sources":["webpack://grafana/./public/app/features/admin/ServerStats.tsx","webpack://grafana/./public/app/features/admin/state/apis.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Loader.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Page.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { css } from '@emotion/css';\nimport { CardContainer, LinkButton, useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { AccessControlAction } from 'app/types';\nimport { getServerStats, ServerStat } from './state/apis';\nimport { contextSrv } from '../../core/services/context_srv';\nimport { Loader } from '../plugins/admin/components/Loader';\n\nexport const ServerStats = () => {\n  const [stats, setStats] = useState<ServerStat | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (contextSrv.hasAccess(AccessControlAction.ActionServerStatsRead, contextSrv.isGrafanaAdmin)) {\n      setIsLoading(true);\n      getServerStats().then((stats) => {\n        setStats(stats);\n        setIsLoading(false);\n      });\n    }\n  }, []);\n\n  if (!contextSrv.hasAccess(AccessControlAction.ActionServerStatsRead, contextSrv.isGrafanaAdmin)) {\n    return null;\n  }\n\n  return (\n    <>\n      <h2 className={styles.title}>Instance statistics</h2>\n      {isLoading ? (\n        <div className={styles.loader}>\n          <Loader text={'Loading instance stats...'} />\n        </div>\n      ) : stats ? (\n        <div className={styles.row}>\n          <StatCard\n            content={[\n              { name: 'Dashboards (starred)', value: `${stats.dashboards} (${stats.stars})` },\n              { name: 'Tags', value: stats.tags },\n              { name: 'Playlists', value: stats.playlists },\n              { name: 'Snapshots', value: stats.snapshots },\n            ]}\n            footer={\n              <LinkButton href={'/dashboards'} variant={'secondary'}>\n                Manage dashboards\n              </LinkButton>\n            }\n          />\n\n          <div className={styles.doubleRow}>\n            <StatCard\n              content={[{ name: 'Data sources', value: stats.datasources }]}\n              footer={\n                <LinkButton href={'/datasources'} variant={'secondary'}>\n                  Manage data sources\n                </LinkButton>\n              }\n            />\n            <StatCard\n              content={[{ name: 'Alerts', value: stats.alerts }]}\n              footer={\n                <LinkButton href={'/alerting/list'} variant={'secondary'}>\n                  Alerts\n                </LinkButton>\n              }\n            />\n          </div>\n          <StatCard\n            content={[\n              { name: 'Organisations', value: stats.orgs },\n              { name: 'Users total', value: stats.users },\n              { name: 'Active users in last 30 days', value: stats.activeUsers },\n              { name: 'Active sessions', value: stats.activeSessions },\n            ]}\n            footer={\n              <LinkButton href={'/admin/users'} variant={'secondary'}>\n                Manage users\n              </LinkButton>\n            }\n          />\n        </div>\n      ) : (\n        <p className={styles.notFound}>No stats found.</p>\n      )}\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    title: css`\n      margin-bottom: ${theme.spacing(4)};\n    `,\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n\n      & > div:not(:last-of-type) {\n        margin-right: ${theme.spacing(2)};\n      }\n\n      & > div {\n        width: 33.3%;\n      }\n    `,\n    doubleRow: css`\n      display: flex;\n      flex-direction: column;\n\n      & > div:first-of-type {\n        margin-bottom: ${theme.spacing(2)};\n      }\n    `,\n\n    loader: css`\n      height: 290px;\n    `,\n\n    notFound: css`\n      font-size: ${theme.typography.h6.fontSize};\n      text-align: center;\n      height: 290px;\n    `,\n  };\n};\n\ntype StatCardProps = {\n  content: Array<Record<string, number | string>>;\n  footer?: JSX.Element;\n};\n\nconst StatCard = ({ content, footer }: StatCardProps) => {\n  const styles = useStyles2(getCardStyles);\n  return (\n    <CardContainer className={styles.container} disableHover>\n      <div className={styles.inner}>\n        <div className={styles.content}>\n          {content.map((item) => {\n            return (\n              <div key={item.name} className={styles.row}>\n                <span>{item.name}</span>\n                <span>{item.value}</span>\n              </div>\n            );\n          })}\n        </div>\n        {footer && <div>{footer}</div>}\n      </div>\n    </CardContainer>\n  );\n};\n\nconst getCardStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      padding: ${theme.spacing(2)};\n    `,\n    inner: css`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n    `,\n    content: css`\n      flex: 1 0 auto;\n    `,\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      margin-bottom: ${theme.spacing(2)};\n      align-items: center;\n    `,\n  };\n};\n","import { getBackendSrv } from '@grafana/runtime';\n\nexport interface ServerStat {\n  activeAdmins: number;\n  activeEditors: number;\n  activeSessions: number;\n  activeUsers: number;\n  activeViewers: number;\n  admins: number;\n  alerts: number;\n  dashboards: number;\n  datasources: number;\n  editors: number;\n  orgs: number;\n  playlists: number;\n  snapshots: number;\n  stars: number;\n  tags: number;\n  users: number;\n  viewers: number;\n}\n\nexport const getServerStats = async (): Promise<ServerStat | null> => {\n  return getBackendSrv()\n    .get('api/admin/stats')\n    .catch((err) => {\n      console.error(err);\n      return null;\n    });\n};\n","import React from 'react';\nimport { LoadingPlaceholder } from '@grafana/ui';\nimport { Page } from './Page';\n\nexport interface Props {\n  text?: string;\n}\n\nexport const Loader = ({ text = 'Loading...' }: Props) => {\n  return (\n    <Page>\n      <div className=\"page-loader-wrapper\">\n        <LoadingPlaceholder text={text} />\n      </div>\n    </Page>\n  );\n};\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const Page: React.FC = ({ children }) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <div className=\"page-container\">\n      <div className={styles}>{children}</div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) =>\n  css`\n    margin-bottom: ${theme.spacing(3)};\n  `;\n"],"names":["ServerStats","stats","setStats","useState","isLoading","setIsLoading","styles","useStyles2","getStyles","useEffect","contextSrv","AccessControlAction","async","getBackendSrv","get","catch","err","console","error","getServerStats","then","className","title","loader","Loader","text","row","StatCard","content","name","value","dashboards","stars","tags","playlists","snapshots","footer","LinkButton","href","variant","doubleRow","datasources","alerts","orgs","users","activeUsers","activeSessions","notFound","theme","css","spacing","typography","h6","fontSize","getCardStyles","CardContainer","container","disableHover","inner","map","item","LoadingPlaceholder","Page","children"],"sourceRoot":""}